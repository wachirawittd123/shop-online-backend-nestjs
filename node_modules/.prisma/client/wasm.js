
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.4.1
 * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
 */
Prisma.prismaVersion = {
  client: "6.4.1",
  engine: "a9055b89e58b4b5bfb59600785423b1db3d0e75d"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  phone: 'phone',
  name: 'name',
  picture: 'picture',
  role: 'role',
  verifyId: 'verifyId',
  notification: 'notification',
  allNotification: 'allNotification',
  method: 'method',
  status: 'status',
  google: 'google',
  facebook: 'facebook',
  provider: 'provider',
  creditBalance: 'creditBalance',
  creditPeriod: 'creditPeriod',
  consumersId: 'consumersId',
  salt: 'salt',
  token: 'token',
  rtoken: 'rtoken',
  ftoken: 'ftoken',
  gtoken: 'gtoken',
  pwExpiredOn: 'pwExpiredOn',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  createdOn: 'createdOn',
  updatedOn: 'updatedOn',
  taxName: 'taxName',
  taxNo: 'taxNo',
  taxAddress: 'taxAddress',
  profileImage: 'profileImage',
  faceCompanyName: 'faceCompanyName',
  faceCompanyPassword: 'faceCompanyPassword',
  profile: 'profile',
  signtoken: 'signtoken',
  credit: 'credit',
  subscription: 'subscription',
  type: 'type',
  originCreditBalance: 'originCreditBalance',
  createdAt: 'createdAt'
};

exports.Prisma.UserVerifyScalarFieldEnum = {
  id: 'id',
  status: 'status',
  code: 'code',
  userId: 'userId'
};

exports.Prisma.UserCreditNotificationScalarFieldEnum = {
  id: 'id',
  credit: 'credit',
  lastSent: 'lastSent'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  categoriesName: 'categoriesName',
  createdOn: 'createdOn',
  updatedOn: 'updatedOn',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  apiCategoriesId: 'apiCategoriesId',
  price: 'price',
  description: 'description',
  description_EN: 'description_EN',
  order: 'order',
  urlPath: 'urlPath',
  useCaseDetail1: 'useCaseDetail1',
  useCaseDetail1_EN: 'useCaseDetail1_EN',
  useCaseDetail2: 'useCaseDetail2',
  useCaseDetail2_EN: 'useCaseDetail2_EN',
  useCaseDetail3: 'useCaseDetail3',
  useCaseDetail3_EN: 'useCaseDetail3_EN',
  useCaseImagePath: 'useCaseImagePath',
  imagePath: 'imagePath',
  createdOn: 'createdOn',
  updatedOn: 'updatedOn',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  docsUrl: 'docsUrl',
  isFeaturedProducts: 'isFeaturedProducts',
  icon: 'icon'
};

exports.Prisma.PricingScalarFieldEnum = {
  id: 'id',
  icPerPrice: 'icPerPrice',
  validatePeriod: 'validatePeriod',
  min: 'min',
  max: 'max',
  createdOn: 'createdOn',
  updatedOn: 'updatedOn',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  UserVerify: 'UserVerify',
  UserCreditNotification: 'UserCreditNotification',
  Category: 'Category',
  Service: 'Service',
  Pricing: 'Pricing'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
