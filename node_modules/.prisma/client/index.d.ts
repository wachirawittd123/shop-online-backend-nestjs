
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserVerify
 * 
 */
export type UserVerify = $Result.DefaultSelection<Prisma.$UserVerifyPayload>
/**
 * Model UserCreditNotification
 * 
 */
export type UserCreditNotification = $Result.DefaultSelection<Prisma.$UserCreditNotificationPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Service
 * 
 */
export type Service = $Result.DefaultSelection<Prisma.$ServicePayload>
/**
 * Model Pricing
 * 
 */
export type Pricing = $Result.DefaultSelection<Prisma.$PricingPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userVerify`: Exposes CRUD operations for the **UserVerify** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserVerifies
    * const userVerifies = await prisma.userVerify.findMany()
    * ```
    */
  get userVerify(): Prisma.UserVerifyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userCreditNotification`: Exposes CRUD operations for the **UserCreditNotification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserCreditNotifications
    * const userCreditNotifications = await prisma.userCreditNotification.findMany()
    * ```
    */
  get userCreditNotification(): Prisma.UserCreditNotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.service`: Exposes CRUD operations for the **Service** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.service.findMany()
    * ```
    */
  get service(): Prisma.ServiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pricing`: Exposes CRUD operations for the **Pricing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pricings
    * const pricings = await prisma.pricing.findMany()
    * ```
    */
  get pricing(): Prisma.PricingDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.4.1
   * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    UserVerify: 'UserVerify',
    UserCreditNotification: 'UserCreditNotification',
    Category: 'Category',
    Service: 'Service',
    Pricing: 'Pricing'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "userVerify" | "userCreditNotification" | "category" | "service" | "pricing"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserVerify: {
        payload: Prisma.$UserVerifyPayload<ExtArgs>
        fields: Prisma.UserVerifyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserVerifyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserVerifyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>
          }
          findFirst: {
            args: Prisma.UserVerifyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserVerifyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>
          }
          findMany: {
            args: Prisma.UserVerifyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>[]
          }
          create: {
            args: Prisma.UserVerifyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>
          }
          createMany: {
            args: Prisma.UserVerifyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserVerifyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>[]
          }
          delete: {
            args: Prisma.UserVerifyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>
          }
          update: {
            args: Prisma.UserVerifyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>
          }
          deleteMany: {
            args: Prisma.UserVerifyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserVerifyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserVerifyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>[]
          }
          upsert: {
            args: Prisma.UserVerifyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserVerifyPayload>
          }
          aggregate: {
            args: Prisma.UserVerifyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserVerify>
          }
          groupBy: {
            args: Prisma.UserVerifyGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserVerifyGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserVerifyCountArgs<ExtArgs>
            result: $Utils.Optional<UserVerifyCountAggregateOutputType> | number
          }
        }
      }
      UserCreditNotification: {
        payload: Prisma.$UserCreditNotificationPayload<ExtArgs>
        fields: Prisma.UserCreditNotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserCreditNotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserCreditNotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>
          }
          findFirst: {
            args: Prisma.UserCreditNotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserCreditNotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>
          }
          findMany: {
            args: Prisma.UserCreditNotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>[]
          }
          create: {
            args: Prisma.UserCreditNotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>
          }
          createMany: {
            args: Prisma.UserCreditNotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreditNotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>[]
          }
          delete: {
            args: Prisma.UserCreditNotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>
          }
          update: {
            args: Prisma.UserCreditNotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>
          }
          deleteMany: {
            args: Prisma.UserCreditNotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserCreditNotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserCreditNotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>[]
          }
          upsert: {
            args: Prisma.UserCreditNotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCreditNotificationPayload>
          }
          aggregate: {
            args: Prisma.UserCreditNotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserCreditNotification>
          }
          groupBy: {
            args: Prisma.UserCreditNotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserCreditNotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCreditNotificationCountArgs<ExtArgs>
            result: $Utils.Optional<UserCreditNotificationCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Service: {
        payload: Prisma.$ServicePayload<ExtArgs>
        fields: Prisma.ServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          findFirst: {
            args: Prisma.ServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          findMany: {
            args: Prisma.ServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          create: {
            args: Prisma.ServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          createMany: {
            args: Prisma.ServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          delete: {
            args: Prisma.ServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          update: {
            args: Prisma.ServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          deleteMany: {
            args: Prisma.ServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          upsert: {
            args: Prisma.ServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          aggregate: {
            args: Prisma.ServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateService>
          }
          groupBy: {
            args: Prisma.ServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceCountAggregateOutputType> | number
          }
        }
      }
      Pricing: {
        payload: Prisma.$PricingPayload<ExtArgs>
        fields: Prisma.PricingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PricingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PricingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>
          }
          findFirst: {
            args: Prisma.PricingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PricingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>
          }
          findMany: {
            args: Prisma.PricingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>[]
          }
          create: {
            args: Prisma.PricingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>
          }
          createMany: {
            args: Prisma.PricingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PricingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>[]
          }
          delete: {
            args: Prisma.PricingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>
          }
          update: {
            args: Prisma.PricingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>
          }
          deleteMany: {
            args: Prisma.PricingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PricingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PricingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>[]
          }
          upsert: {
            args: Prisma.PricingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricingPayload>
          }
          aggregate: {
            args: Prisma.PricingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePricing>
          }
          groupBy: {
            args: Prisma.PricingGroupByArgs<ExtArgs>
            result: $Utils.Optional<PricingGroupByOutputType>[]
          }
          count: {
            args: Prisma.PricingCountArgs<ExtArgs>
            result: $Utils.Optional<PricingCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    userVerify?: UserVerifyOmit
    userCreditNotification?: UserCreditNotificationOmit
    category?: CategoryOmit
    service?: ServiceOmit
    pricing?: PricingOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    createdCategories: number
    updatedCategories: number
    createdServices: number
    updatedServices: number
    createdPricings: number
    updatedPricings: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdCategories?: boolean | UserCountOutputTypeCountCreatedCategoriesArgs
    updatedCategories?: boolean | UserCountOutputTypeCountUpdatedCategoriesArgs
    createdServices?: boolean | UserCountOutputTypeCountCreatedServicesArgs
    updatedServices?: boolean | UserCountOutputTypeCountUpdatedServicesArgs
    createdPricings?: boolean | UserCountOutputTypeCountCreatedPricingsArgs
    updatedPricings?: boolean | UserCountOutputTypeCountUpdatedPricingsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedPricingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PricingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedPricingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PricingWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    services: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services?: boolean | CategoryCountOutputTypeCountServicesArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    creditBalance: number | null
    originCreditBalance: number | null
  }

  export type UserSumAggregateOutputType = {
    creditBalance: number | null
    originCreditBalance: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    phone: string | null
    name: string | null
    picture: string | null
    role: string | null
    verifyId: string | null
    notification: boolean | null
    allNotification: boolean | null
    method: string | null
    status: string | null
    provider: string | null
    creditBalance: number | null
    creditPeriod: Date | null
    consumersId: string | null
    salt: string | null
    token: string | null
    rtoken: string | null
    ftoken: string | null
    gtoken: string | null
    pwExpiredOn: Date | null
    createdBy: string | null
    updatedBy: string | null
    createdOn: Date | null
    updatedOn: Date | null
    taxName: string | null
    taxNo: string | null
    taxAddress: string | null
    profileImage: string | null
    faceCompanyName: string | null
    faceCompanyPassword: string | null
    subscription: boolean | null
    type: string | null
    originCreditBalance: number | null
    createdAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    phone: string | null
    name: string | null
    picture: string | null
    role: string | null
    verifyId: string | null
    notification: boolean | null
    allNotification: boolean | null
    method: string | null
    status: string | null
    provider: string | null
    creditBalance: number | null
    creditPeriod: Date | null
    consumersId: string | null
    salt: string | null
    token: string | null
    rtoken: string | null
    ftoken: string | null
    gtoken: string | null
    pwExpiredOn: Date | null
    createdBy: string | null
    updatedBy: string | null
    createdOn: Date | null
    updatedOn: Date | null
    taxName: string | null
    taxNo: string | null
    taxAddress: string | null
    profileImage: string | null
    faceCompanyName: string | null
    faceCompanyPassword: string | null
    subscription: boolean | null
    type: string | null
    originCreditBalance: number | null
    createdAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    phone: number
    name: number
    picture: number
    role: number
    verifyId: number
    notification: number
    allNotification: number
    method: number
    status: number
    google: number
    facebook: number
    provider: number
    creditBalance: number
    creditPeriod: number
    consumersId: number
    salt: number
    token: number
    rtoken: number
    ftoken: number
    gtoken: number
    pwExpiredOn: number
    createdBy: number
    updatedBy: number
    createdOn: number
    updatedOn: number
    taxName: number
    taxNo: number
    taxAddress: number
    profileImage: number
    faceCompanyName: number
    faceCompanyPassword: number
    profile: number
    signtoken: number
    credit: number
    subscription: number
    type: number
    originCreditBalance: number
    createdAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    creditBalance?: true
    originCreditBalance?: true
  }

  export type UserSumAggregateInputType = {
    creditBalance?: true
    originCreditBalance?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    phone?: true
    name?: true
    picture?: true
    role?: true
    verifyId?: true
    notification?: true
    allNotification?: true
    method?: true
    status?: true
    provider?: true
    creditBalance?: true
    creditPeriod?: true
    consumersId?: true
    salt?: true
    token?: true
    rtoken?: true
    ftoken?: true
    gtoken?: true
    pwExpiredOn?: true
    createdBy?: true
    updatedBy?: true
    createdOn?: true
    updatedOn?: true
    taxName?: true
    taxNo?: true
    taxAddress?: true
    profileImage?: true
    faceCompanyName?: true
    faceCompanyPassword?: true
    subscription?: true
    type?: true
    originCreditBalance?: true
    createdAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    phone?: true
    name?: true
    picture?: true
    role?: true
    verifyId?: true
    notification?: true
    allNotification?: true
    method?: true
    status?: true
    provider?: true
    creditBalance?: true
    creditPeriod?: true
    consumersId?: true
    salt?: true
    token?: true
    rtoken?: true
    ftoken?: true
    gtoken?: true
    pwExpiredOn?: true
    createdBy?: true
    updatedBy?: true
    createdOn?: true
    updatedOn?: true
    taxName?: true
    taxNo?: true
    taxAddress?: true
    profileImage?: true
    faceCompanyName?: true
    faceCompanyPassword?: true
    subscription?: true
    type?: true
    originCreditBalance?: true
    createdAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    phone?: true
    name?: true
    picture?: true
    role?: true
    verifyId?: true
    notification?: true
    allNotification?: true
    method?: true
    status?: true
    google?: true
    facebook?: true
    provider?: true
    creditBalance?: true
    creditPeriod?: true
    consumersId?: true
    salt?: true
    token?: true
    rtoken?: true
    ftoken?: true
    gtoken?: true
    pwExpiredOn?: true
    createdBy?: true
    updatedBy?: true
    createdOn?: true
    updatedOn?: true
    taxName?: true
    taxNo?: true
    taxAddress?: true
    profileImage?: true
    faceCompanyName?: true
    faceCompanyPassword?: true
    profile?: true
    signtoken?: true
    credit?: true
    subscription?: true
    type?: true
    originCreditBalance?: true
    createdAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    phone: string | null
    name: string
    picture: string | null
    role: string
    verifyId: string | null
    notification: boolean
    allNotification: boolean
    method: string | null
    status: string
    google: JsonValue | null
    facebook: JsonValue | null
    provider: string
    creditBalance: number
    creditPeriod: Date | null
    consumersId: string | null
    salt: string | null
    token: string | null
    rtoken: string | null
    ftoken: string | null
    gtoken: string | null
    pwExpiredOn: Date | null
    createdBy: string | null
    updatedBy: string | null
    createdOn: Date
    updatedOn: Date
    taxName: string | null
    taxNo: string | null
    taxAddress: string | null
    profileImage: string | null
    faceCompanyName: string | null
    faceCompanyPassword: string | null
    profile: JsonValue | null
    signtoken: JsonValue | null
    credit: JsonValue | null
    subscription: boolean
    type: string | null
    originCreditBalance: number | null
    createdAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    name?: boolean
    picture?: boolean
    role?: boolean
    verifyId?: boolean
    notification?: boolean
    allNotification?: boolean
    method?: boolean
    status?: boolean
    google?: boolean
    facebook?: boolean
    provider?: boolean
    creditBalance?: boolean
    creditPeriod?: boolean
    consumersId?: boolean
    salt?: boolean
    token?: boolean
    rtoken?: boolean
    ftoken?: boolean
    gtoken?: boolean
    pwExpiredOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    taxName?: boolean
    taxNo?: boolean
    taxAddress?: boolean
    profileImage?: boolean
    faceCompanyName?: boolean
    faceCompanyPassword?: boolean
    profile?: boolean
    signtoken?: boolean
    credit?: boolean
    subscription?: boolean
    type?: boolean
    originCreditBalance?: boolean
    createdAt?: boolean
    verify?: boolean | User$verifyArgs<ExtArgs>
    creditNotification?: boolean | User$creditNotificationArgs<ExtArgs>
    createdCategories?: boolean | User$createdCategoriesArgs<ExtArgs>
    updatedCategories?: boolean | User$updatedCategoriesArgs<ExtArgs>
    createdServices?: boolean | User$createdServicesArgs<ExtArgs>
    updatedServices?: boolean | User$updatedServicesArgs<ExtArgs>
    createdPricings?: boolean | User$createdPricingsArgs<ExtArgs>
    updatedPricings?: boolean | User$updatedPricingsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    name?: boolean
    picture?: boolean
    role?: boolean
    verifyId?: boolean
    notification?: boolean
    allNotification?: boolean
    method?: boolean
    status?: boolean
    google?: boolean
    facebook?: boolean
    provider?: boolean
    creditBalance?: boolean
    creditPeriod?: boolean
    consumersId?: boolean
    salt?: boolean
    token?: boolean
    rtoken?: boolean
    ftoken?: boolean
    gtoken?: boolean
    pwExpiredOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    taxName?: boolean
    taxNo?: boolean
    taxAddress?: boolean
    profileImage?: boolean
    faceCompanyName?: boolean
    faceCompanyPassword?: boolean
    profile?: boolean
    signtoken?: boolean
    credit?: boolean
    subscription?: boolean
    type?: boolean
    originCreditBalance?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    name?: boolean
    picture?: boolean
    role?: boolean
    verifyId?: boolean
    notification?: boolean
    allNotification?: boolean
    method?: boolean
    status?: boolean
    google?: boolean
    facebook?: boolean
    provider?: boolean
    creditBalance?: boolean
    creditPeriod?: boolean
    consumersId?: boolean
    salt?: boolean
    token?: boolean
    rtoken?: boolean
    ftoken?: boolean
    gtoken?: boolean
    pwExpiredOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    taxName?: boolean
    taxNo?: boolean
    taxAddress?: boolean
    profileImage?: boolean
    faceCompanyName?: boolean
    faceCompanyPassword?: boolean
    profile?: boolean
    signtoken?: boolean
    credit?: boolean
    subscription?: boolean
    type?: boolean
    originCreditBalance?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    name?: boolean
    picture?: boolean
    role?: boolean
    verifyId?: boolean
    notification?: boolean
    allNotification?: boolean
    method?: boolean
    status?: boolean
    google?: boolean
    facebook?: boolean
    provider?: boolean
    creditBalance?: boolean
    creditPeriod?: boolean
    consumersId?: boolean
    salt?: boolean
    token?: boolean
    rtoken?: boolean
    ftoken?: boolean
    gtoken?: boolean
    pwExpiredOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    taxName?: boolean
    taxNo?: boolean
    taxAddress?: boolean
    profileImage?: boolean
    faceCompanyName?: boolean
    faceCompanyPassword?: boolean
    profile?: boolean
    signtoken?: boolean
    credit?: boolean
    subscription?: boolean
    type?: boolean
    originCreditBalance?: boolean
    createdAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "phone" | "name" | "picture" | "role" | "verifyId" | "notification" | "allNotification" | "method" | "status" | "google" | "facebook" | "provider" | "creditBalance" | "creditPeriod" | "consumersId" | "salt" | "token" | "rtoken" | "ftoken" | "gtoken" | "pwExpiredOn" | "createdBy" | "updatedBy" | "createdOn" | "updatedOn" | "taxName" | "taxNo" | "taxAddress" | "profileImage" | "faceCompanyName" | "faceCompanyPassword" | "profile" | "signtoken" | "credit" | "subscription" | "type" | "originCreditBalance" | "createdAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    verify?: boolean | User$verifyArgs<ExtArgs>
    creditNotification?: boolean | User$creditNotificationArgs<ExtArgs>
    createdCategories?: boolean | User$createdCategoriesArgs<ExtArgs>
    updatedCategories?: boolean | User$updatedCategoriesArgs<ExtArgs>
    createdServices?: boolean | User$createdServicesArgs<ExtArgs>
    updatedServices?: boolean | User$updatedServicesArgs<ExtArgs>
    createdPricings?: boolean | User$createdPricingsArgs<ExtArgs>
    updatedPricings?: boolean | User$updatedPricingsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      verify: Prisma.$UserVerifyPayload<ExtArgs> | null
      creditNotification: Prisma.$UserCreditNotificationPayload<ExtArgs> | null
      createdCategories: Prisma.$CategoryPayload<ExtArgs>[]
      updatedCategories: Prisma.$CategoryPayload<ExtArgs>[]
      createdServices: Prisma.$ServicePayload<ExtArgs>[]
      updatedServices: Prisma.$ServicePayload<ExtArgs>[]
      createdPricings: Prisma.$PricingPayload<ExtArgs>[]
      updatedPricings: Prisma.$PricingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      phone: string | null
      name: string
      picture: string | null
      role: string
      verifyId: string | null
      notification: boolean
      allNotification: boolean
      method: string | null
      status: string
      google: Prisma.JsonValue | null
      facebook: Prisma.JsonValue | null
      provider: string
      creditBalance: number
      creditPeriod: Date | null
      consumersId: string | null
      salt: string | null
      token: string | null
      rtoken: string | null
      ftoken: string | null
      gtoken: string | null
      pwExpiredOn: Date | null
      createdBy: string | null
      updatedBy: string | null
      createdOn: Date
      updatedOn: Date
      taxName: string | null
      taxNo: string | null
      taxAddress: string | null
      profileImage: string | null
      faceCompanyName: string | null
      faceCompanyPassword: string | null
      profile: Prisma.JsonValue | null
      signtoken: Prisma.JsonValue | null
      credit: Prisma.JsonValue | null
      subscription: boolean
      type: string | null
      originCreditBalance: number | null
      createdAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    verify<T extends User$verifyArgs<ExtArgs> = {}>(args?: Subset<T, User$verifyArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    creditNotification<T extends User$creditNotificationArgs<ExtArgs> = {}>(args?: Subset<T, User$creditNotificationArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    createdCategories<T extends User$createdCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    updatedCategories<T extends User$updatedCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    createdServices<T extends User$createdServicesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdServicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    updatedServices<T extends User$updatedServicesArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedServicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    createdPricings<T extends User$createdPricingsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdPricingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    updatedPricings<T extends User$updatedPricingsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedPricingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly picture: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly verifyId: FieldRef<"User", 'String'>
    readonly notification: FieldRef<"User", 'Boolean'>
    readonly allNotification: FieldRef<"User", 'Boolean'>
    readonly method: FieldRef<"User", 'String'>
    readonly status: FieldRef<"User", 'String'>
    readonly google: FieldRef<"User", 'Json'>
    readonly facebook: FieldRef<"User", 'Json'>
    readonly provider: FieldRef<"User", 'String'>
    readonly creditBalance: FieldRef<"User", 'Float'>
    readonly creditPeriod: FieldRef<"User", 'DateTime'>
    readonly consumersId: FieldRef<"User", 'String'>
    readonly salt: FieldRef<"User", 'String'>
    readonly token: FieldRef<"User", 'String'>
    readonly rtoken: FieldRef<"User", 'String'>
    readonly ftoken: FieldRef<"User", 'String'>
    readonly gtoken: FieldRef<"User", 'String'>
    readonly pwExpiredOn: FieldRef<"User", 'DateTime'>
    readonly createdBy: FieldRef<"User", 'String'>
    readonly updatedBy: FieldRef<"User", 'String'>
    readonly createdOn: FieldRef<"User", 'DateTime'>
    readonly updatedOn: FieldRef<"User", 'DateTime'>
    readonly taxName: FieldRef<"User", 'String'>
    readonly taxNo: FieldRef<"User", 'String'>
    readonly taxAddress: FieldRef<"User", 'String'>
    readonly profileImage: FieldRef<"User", 'String'>
    readonly faceCompanyName: FieldRef<"User", 'String'>
    readonly faceCompanyPassword: FieldRef<"User", 'String'>
    readonly profile: FieldRef<"User", 'Json'>
    readonly signtoken: FieldRef<"User", 'Json'>
    readonly credit: FieldRef<"User", 'Json'>
    readonly subscription: FieldRef<"User", 'Boolean'>
    readonly type: FieldRef<"User", 'String'>
    readonly originCreditBalance: FieldRef<"User", 'Float'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.verify
   */
  export type User$verifyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    where?: UserVerifyWhereInput
  }

  /**
   * User.creditNotification
   */
  export type User$creditNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    where?: UserCreditNotificationWhereInput
  }

  /**
   * User.createdCategories
   */
  export type User$createdCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.updatedCategories
   */
  export type User$updatedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.createdServices
   */
  export type User$createdServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * User.updatedServices
   */
  export type User$updatedServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * User.createdPricings
   */
  export type User$createdPricingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    where?: PricingWhereInput
    orderBy?: PricingOrderByWithRelationInput | PricingOrderByWithRelationInput[]
    cursor?: PricingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PricingScalarFieldEnum | PricingScalarFieldEnum[]
  }

  /**
   * User.updatedPricings
   */
  export type User$updatedPricingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    where?: PricingWhereInput
    orderBy?: PricingOrderByWithRelationInput | PricingOrderByWithRelationInput[]
    cursor?: PricingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PricingScalarFieldEnum | PricingScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserVerify
   */

  export type AggregateUserVerify = {
    _count: UserVerifyCountAggregateOutputType | null
    _min: UserVerifyMinAggregateOutputType | null
    _max: UserVerifyMaxAggregateOutputType | null
  }

  export type UserVerifyMinAggregateOutputType = {
    id: string | null
    status: boolean | null
    code: string | null
    userId: string | null
  }

  export type UserVerifyMaxAggregateOutputType = {
    id: string | null
    status: boolean | null
    code: string | null
    userId: string | null
  }

  export type UserVerifyCountAggregateOutputType = {
    id: number
    status: number
    code: number
    userId: number
    _all: number
  }


  export type UserVerifyMinAggregateInputType = {
    id?: true
    status?: true
    code?: true
    userId?: true
  }

  export type UserVerifyMaxAggregateInputType = {
    id?: true
    status?: true
    code?: true
    userId?: true
  }

  export type UserVerifyCountAggregateInputType = {
    id?: true
    status?: true
    code?: true
    userId?: true
    _all?: true
  }

  export type UserVerifyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserVerify to aggregate.
     */
    where?: UserVerifyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVerifies to fetch.
     */
    orderBy?: UserVerifyOrderByWithRelationInput | UserVerifyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserVerifyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVerifies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVerifies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserVerifies
    **/
    _count?: true | UserVerifyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserVerifyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserVerifyMaxAggregateInputType
  }

  export type GetUserVerifyAggregateType<T extends UserVerifyAggregateArgs> = {
        [P in keyof T & keyof AggregateUserVerify]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserVerify[P]>
      : GetScalarType<T[P], AggregateUserVerify[P]>
  }




  export type UserVerifyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserVerifyWhereInput
    orderBy?: UserVerifyOrderByWithAggregationInput | UserVerifyOrderByWithAggregationInput[]
    by: UserVerifyScalarFieldEnum[] | UserVerifyScalarFieldEnum
    having?: UserVerifyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserVerifyCountAggregateInputType | true
    _min?: UserVerifyMinAggregateInputType
    _max?: UserVerifyMaxAggregateInputType
  }

  export type UserVerifyGroupByOutputType = {
    id: string
    status: boolean
    code: string
    userId: string | null
    _count: UserVerifyCountAggregateOutputType | null
    _min: UserVerifyMinAggregateOutputType | null
    _max: UserVerifyMaxAggregateOutputType | null
  }

  type GetUserVerifyGroupByPayload<T extends UserVerifyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserVerifyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserVerifyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserVerifyGroupByOutputType[P]>
            : GetScalarType<T[P], UserVerifyGroupByOutputType[P]>
        }
      >
    >


  export type UserVerifySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    code?: boolean
    userId?: boolean
    user?: boolean | UserVerify$userArgs<ExtArgs>
  }, ExtArgs["result"]["userVerify"]>

  export type UserVerifySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    code?: boolean
    userId?: boolean
    user?: boolean | UserVerify$userArgs<ExtArgs>
  }, ExtArgs["result"]["userVerify"]>

  export type UserVerifySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    code?: boolean
    userId?: boolean
    user?: boolean | UserVerify$userArgs<ExtArgs>
  }, ExtArgs["result"]["userVerify"]>

  export type UserVerifySelectScalar = {
    id?: boolean
    status?: boolean
    code?: boolean
    userId?: boolean
  }

  export type UserVerifyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "code" | "userId", ExtArgs["result"]["userVerify"]>
  export type UserVerifyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserVerify$userArgs<ExtArgs>
  }
  export type UserVerifyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserVerify$userArgs<ExtArgs>
  }
  export type UserVerifyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserVerify$userArgs<ExtArgs>
  }

  export type $UserVerifyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserVerify"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: boolean
      code: string
      userId: string | null
    }, ExtArgs["result"]["userVerify"]>
    composites: {}
  }

  type UserVerifyGetPayload<S extends boolean | null | undefined | UserVerifyDefaultArgs> = $Result.GetResult<Prisma.$UserVerifyPayload, S>

  type UserVerifyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserVerifyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserVerifyCountAggregateInputType | true
    }

  export interface UserVerifyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserVerify'], meta: { name: 'UserVerify' } }
    /**
     * Find zero or one UserVerify that matches the filter.
     * @param {UserVerifyFindUniqueArgs} args - Arguments to find a UserVerify
     * @example
     * // Get one UserVerify
     * const userVerify = await prisma.userVerify.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserVerifyFindUniqueArgs>(args: SelectSubset<T, UserVerifyFindUniqueArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one UserVerify that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserVerifyFindUniqueOrThrowArgs} args - Arguments to find a UserVerify
     * @example
     * // Get one UserVerify
     * const userVerify = await prisma.userVerify.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserVerifyFindUniqueOrThrowArgs>(args: SelectSubset<T, UserVerifyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first UserVerify that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyFindFirstArgs} args - Arguments to find a UserVerify
     * @example
     * // Get one UserVerify
     * const userVerify = await prisma.userVerify.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserVerifyFindFirstArgs>(args?: SelectSubset<T, UserVerifyFindFirstArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first UserVerify that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyFindFirstOrThrowArgs} args - Arguments to find a UserVerify
     * @example
     * // Get one UserVerify
     * const userVerify = await prisma.userVerify.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserVerifyFindFirstOrThrowArgs>(args?: SelectSubset<T, UserVerifyFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more UserVerifies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserVerifies
     * const userVerifies = await prisma.userVerify.findMany()
     * 
     * // Get first 10 UserVerifies
     * const userVerifies = await prisma.userVerify.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userVerifyWithIdOnly = await prisma.userVerify.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserVerifyFindManyArgs>(args?: SelectSubset<T, UserVerifyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a UserVerify.
     * @param {UserVerifyCreateArgs} args - Arguments to create a UserVerify.
     * @example
     * // Create one UserVerify
     * const UserVerify = await prisma.userVerify.create({
     *   data: {
     *     // ... data to create a UserVerify
     *   }
     * })
     * 
     */
    create<T extends UserVerifyCreateArgs>(args: SelectSubset<T, UserVerifyCreateArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many UserVerifies.
     * @param {UserVerifyCreateManyArgs} args - Arguments to create many UserVerifies.
     * @example
     * // Create many UserVerifies
     * const userVerify = await prisma.userVerify.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserVerifyCreateManyArgs>(args?: SelectSubset<T, UserVerifyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserVerifies and returns the data saved in the database.
     * @param {UserVerifyCreateManyAndReturnArgs} args - Arguments to create many UserVerifies.
     * @example
     * // Create many UserVerifies
     * const userVerify = await prisma.userVerify.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserVerifies and only return the `id`
     * const userVerifyWithIdOnly = await prisma.userVerify.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserVerifyCreateManyAndReturnArgs>(args?: SelectSubset<T, UserVerifyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a UserVerify.
     * @param {UserVerifyDeleteArgs} args - Arguments to delete one UserVerify.
     * @example
     * // Delete one UserVerify
     * const UserVerify = await prisma.userVerify.delete({
     *   where: {
     *     // ... filter to delete one UserVerify
     *   }
     * })
     * 
     */
    delete<T extends UserVerifyDeleteArgs>(args: SelectSubset<T, UserVerifyDeleteArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one UserVerify.
     * @param {UserVerifyUpdateArgs} args - Arguments to update one UserVerify.
     * @example
     * // Update one UserVerify
     * const userVerify = await prisma.userVerify.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserVerifyUpdateArgs>(args: SelectSubset<T, UserVerifyUpdateArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more UserVerifies.
     * @param {UserVerifyDeleteManyArgs} args - Arguments to filter UserVerifies to delete.
     * @example
     * // Delete a few UserVerifies
     * const { count } = await prisma.userVerify.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserVerifyDeleteManyArgs>(args?: SelectSubset<T, UserVerifyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserVerifies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserVerifies
     * const userVerify = await prisma.userVerify.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserVerifyUpdateManyArgs>(args: SelectSubset<T, UserVerifyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserVerifies and returns the data updated in the database.
     * @param {UserVerifyUpdateManyAndReturnArgs} args - Arguments to update many UserVerifies.
     * @example
     * // Update many UserVerifies
     * const userVerify = await prisma.userVerify.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserVerifies and only return the `id`
     * const userVerifyWithIdOnly = await prisma.userVerify.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserVerifyUpdateManyAndReturnArgs>(args: SelectSubset<T, UserVerifyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one UserVerify.
     * @param {UserVerifyUpsertArgs} args - Arguments to update or create a UserVerify.
     * @example
     * // Update or create a UserVerify
     * const userVerify = await prisma.userVerify.upsert({
     *   create: {
     *     // ... data to create a UserVerify
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserVerify we want to update
     *   }
     * })
     */
    upsert<T extends UserVerifyUpsertArgs>(args: SelectSubset<T, UserVerifyUpsertArgs<ExtArgs>>): Prisma__UserVerifyClient<$Result.GetResult<Prisma.$UserVerifyPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of UserVerifies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyCountArgs} args - Arguments to filter UserVerifies to count.
     * @example
     * // Count the number of UserVerifies
     * const count = await prisma.userVerify.count({
     *   where: {
     *     // ... the filter for the UserVerifies we want to count
     *   }
     * })
    **/
    count<T extends UserVerifyCountArgs>(
      args?: Subset<T, UserVerifyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserVerifyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserVerify.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserVerifyAggregateArgs>(args: Subset<T, UserVerifyAggregateArgs>): Prisma.PrismaPromise<GetUserVerifyAggregateType<T>>

    /**
     * Group by UserVerify.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserVerifyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserVerifyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserVerifyGroupByArgs['orderBy'] }
        : { orderBy?: UserVerifyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserVerifyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserVerifyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserVerify model
   */
  readonly fields: UserVerifyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserVerify.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserVerifyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserVerify$userArgs<ExtArgs> = {}>(args?: Subset<T, UserVerify$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserVerify model
   */ 
  interface UserVerifyFieldRefs {
    readonly id: FieldRef<"UserVerify", 'String'>
    readonly status: FieldRef<"UserVerify", 'Boolean'>
    readonly code: FieldRef<"UserVerify", 'String'>
    readonly userId: FieldRef<"UserVerify", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserVerify findUnique
   */
  export type UserVerifyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * Filter, which UserVerify to fetch.
     */
    where: UserVerifyWhereUniqueInput
  }

  /**
   * UserVerify findUniqueOrThrow
   */
  export type UserVerifyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * Filter, which UserVerify to fetch.
     */
    where: UserVerifyWhereUniqueInput
  }

  /**
   * UserVerify findFirst
   */
  export type UserVerifyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * Filter, which UserVerify to fetch.
     */
    where?: UserVerifyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVerifies to fetch.
     */
    orderBy?: UserVerifyOrderByWithRelationInput | UserVerifyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserVerifies.
     */
    cursor?: UserVerifyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVerifies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVerifies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserVerifies.
     */
    distinct?: UserVerifyScalarFieldEnum | UserVerifyScalarFieldEnum[]
  }

  /**
   * UserVerify findFirstOrThrow
   */
  export type UserVerifyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * Filter, which UserVerify to fetch.
     */
    where?: UserVerifyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVerifies to fetch.
     */
    orderBy?: UserVerifyOrderByWithRelationInput | UserVerifyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserVerifies.
     */
    cursor?: UserVerifyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVerifies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVerifies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserVerifies.
     */
    distinct?: UserVerifyScalarFieldEnum | UserVerifyScalarFieldEnum[]
  }

  /**
   * UserVerify findMany
   */
  export type UserVerifyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * Filter, which UserVerifies to fetch.
     */
    where?: UserVerifyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserVerifies to fetch.
     */
    orderBy?: UserVerifyOrderByWithRelationInput | UserVerifyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserVerifies.
     */
    cursor?: UserVerifyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserVerifies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserVerifies.
     */
    skip?: number
    distinct?: UserVerifyScalarFieldEnum | UserVerifyScalarFieldEnum[]
  }

  /**
   * UserVerify create
   */
  export type UserVerifyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * The data needed to create a UserVerify.
     */
    data: XOR<UserVerifyCreateInput, UserVerifyUncheckedCreateInput>
  }

  /**
   * UserVerify createMany
   */
  export type UserVerifyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserVerifies.
     */
    data: UserVerifyCreateManyInput | UserVerifyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserVerify createManyAndReturn
   */
  export type UserVerifyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * The data used to create many UserVerifies.
     */
    data: UserVerifyCreateManyInput | UserVerifyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserVerify update
   */
  export type UserVerifyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * The data needed to update a UserVerify.
     */
    data: XOR<UserVerifyUpdateInput, UserVerifyUncheckedUpdateInput>
    /**
     * Choose, which UserVerify to update.
     */
    where: UserVerifyWhereUniqueInput
  }

  /**
   * UserVerify updateMany
   */
  export type UserVerifyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserVerifies.
     */
    data: XOR<UserVerifyUpdateManyMutationInput, UserVerifyUncheckedUpdateManyInput>
    /**
     * Filter which UserVerifies to update
     */
    where?: UserVerifyWhereInput
    /**
     * Limit how many UserVerifies to update.
     */
    limit?: number
  }

  /**
   * UserVerify updateManyAndReturn
   */
  export type UserVerifyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * The data used to update UserVerifies.
     */
    data: XOR<UserVerifyUpdateManyMutationInput, UserVerifyUncheckedUpdateManyInput>
    /**
     * Filter which UserVerifies to update
     */
    where?: UserVerifyWhereInput
    /**
     * Limit how many UserVerifies to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserVerify upsert
   */
  export type UserVerifyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * The filter to search for the UserVerify to update in case it exists.
     */
    where: UserVerifyWhereUniqueInput
    /**
     * In case the UserVerify found by the `where` argument doesn't exist, create a new UserVerify with this data.
     */
    create: XOR<UserVerifyCreateInput, UserVerifyUncheckedCreateInput>
    /**
     * In case the UserVerify was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserVerifyUpdateInput, UserVerifyUncheckedUpdateInput>
  }

  /**
   * UserVerify delete
   */
  export type UserVerifyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
    /**
     * Filter which UserVerify to delete.
     */
    where: UserVerifyWhereUniqueInput
  }

  /**
   * UserVerify deleteMany
   */
  export type UserVerifyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserVerifies to delete
     */
    where?: UserVerifyWhereInput
    /**
     * Limit how many UserVerifies to delete.
     */
    limit?: number
  }

  /**
   * UserVerify.user
   */
  export type UserVerify$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserVerify without action
   */
  export type UserVerifyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserVerify
     */
    select?: UserVerifySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserVerify
     */
    omit?: UserVerifyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserVerifyInclude<ExtArgs> | null
  }


  /**
   * Model UserCreditNotification
   */

  export type AggregateUserCreditNotification = {
    _count: UserCreditNotificationCountAggregateOutputType | null
    _avg: UserCreditNotificationAvgAggregateOutputType | null
    _sum: UserCreditNotificationSumAggregateOutputType | null
    _min: UserCreditNotificationMinAggregateOutputType | null
    _max: UserCreditNotificationMaxAggregateOutputType | null
  }

  export type UserCreditNotificationAvgAggregateOutputType = {
    credit: number | null
  }

  export type UserCreditNotificationSumAggregateOutputType = {
    credit: number | null
  }

  export type UserCreditNotificationMinAggregateOutputType = {
    id: string | null
    credit: number | null
    lastSent: Date | null
  }

  export type UserCreditNotificationMaxAggregateOutputType = {
    id: string | null
    credit: number | null
    lastSent: Date | null
  }

  export type UserCreditNotificationCountAggregateOutputType = {
    id: number
    credit: number
    lastSent: number
    _all: number
  }


  export type UserCreditNotificationAvgAggregateInputType = {
    credit?: true
  }

  export type UserCreditNotificationSumAggregateInputType = {
    credit?: true
  }

  export type UserCreditNotificationMinAggregateInputType = {
    id?: true
    credit?: true
    lastSent?: true
  }

  export type UserCreditNotificationMaxAggregateInputType = {
    id?: true
    credit?: true
    lastSent?: true
  }

  export type UserCreditNotificationCountAggregateInputType = {
    id?: true
    credit?: true
    lastSent?: true
    _all?: true
  }

  export type UserCreditNotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserCreditNotification to aggregate.
     */
    where?: UserCreditNotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCreditNotifications to fetch.
     */
    orderBy?: UserCreditNotificationOrderByWithRelationInput | UserCreditNotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserCreditNotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCreditNotifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCreditNotifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserCreditNotifications
    **/
    _count?: true | UserCreditNotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserCreditNotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserCreditNotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserCreditNotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserCreditNotificationMaxAggregateInputType
  }

  export type GetUserCreditNotificationAggregateType<T extends UserCreditNotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateUserCreditNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserCreditNotification[P]>
      : GetScalarType<T[P], AggregateUserCreditNotification[P]>
  }




  export type UserCreditNotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserCreditNotificationWhereInput
    orderBy?: UserCreditNotificationOrderByWithAggregationInput | UserCreditNotificationOrderByWithAggregationInput[]
    by: UserCreditNotificationScalarFieldEnum[] | UserCreditNotificationScalarFieldEnum
    having?: UserCreditNotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCreditNotificationCountAggregateInputType | true
    _avg?: UserCreditNotificationAvgAggregateInputType
    _sum?: UserCreditNotificationSumAggregateInputType
    _min?: UserCreditNotificationMinAggregateInputType
    _max?: UserCreditNotificationMaxAggregateInputType
  }

  export type UserCreditNotificationGroupByOutputType = {
    id: string
    credit: number
    lastSent: Date
    _count: UserCreditNotificationCountAggregateOutputType | null
    _avg: UserCreditNotificationAvgAggregateOutputType | null
    _sum: UserCreditNotificationSumAggregateOutputType | null
    _min: UserCreditNotificationMinAggregateOutputType | null
    _max: UserCreditNotificationMaxAggregateOutputType | null
  }

  type GetUserCreditNotificationGroupByPayload<T extends UserCreditNotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserCreditNotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserCreditNotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserCreditNotificationGroupByOutputType[P]>
            : GetScalarType<T[P], UserCreditNotificationGroupByOutputType[P]>
        }
      >
    >


  export type UserCreditNotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    credit?: boolean
    lastSent?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userCreditNotification"]>

  export type UserCreditNotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    credit?: boolean
    lastSent?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userCreditNotification"]>

  export type UserCreditNotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    credit?: boolean
    lastSent?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userCreditNotification"]>

  export type UserCreditNotificationSelectScalar = {
    id?: boolean
    credit?: boolean
    lastSent?: boolean
  }

  export type UserCreditNotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "credit" | "lastSent", ExtArgs["result"]["userCreditNotification"]>
  export type UserCreditNotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserCreditNotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserCreditNotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserCreditNotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserCreditNotification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      credit: number
      lastSent: Date
    }, ExtArgs["result"]["userCreditNotification"]>
    composites: {}
  }

  type UserCreditNotificationGetPayload<S extends boolean | null | undefined | UserCreditNotificationDefaultArgs> = $Result.GetResult<Prisma.$UserCreditNotificationPayload, S>

  type UserCreditNotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserCreditNotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCreditNotificationCountAggregateInputType | true
    }

  export interface UserCreditNotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserCreditNotification'], meta: { name: 'UserCreditNotification' } }
    /**
     * Find zero or one UserCreditNotification that matches the filter.
     * @param {UserCreditNotificationFindUniqueArgs} args - Arguments to find a UserCreditNotification
     * @example
     * // Get one UserCreditNotification
     * const userCreditNotification = await prisma.userCreditNotification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserCreditNotificationFindUniqueArgs>(args: SelectSubset<T, UserCreditNotificationFindUniqueArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one UserCreditNotification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserCreditNotificationFindUniqueOrThrowArgs} args - Arguments to find a UserCreditNotification
     * @example
     * // Get one UserCreditNotification
     * const userCreditNotification = await prisma.userCreditNotification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserCreditNotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, UserCreditNotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first UserCreditNotification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationFindFirstArgs} args - Arguments to find a UserCreditNotification
     * @example
     * // Get one UserCreditNotification
     * const userCreditNotification = await prisma.userCreditNotification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserCreditNotificationFindFirstArgs>(args?: SelectSubset<T, UserCreditNotificationFindFirstArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first UserCreditNotification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationFindFirstOrThrowArgs} args - Arguments to find a UserCreditNotification
     * @example
     * // Get one UserCreditNotification
     * const userCreditNotification = await prisma.userCreditNotification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserCreditNotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, UserCreditNotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more UserCreditNotifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserCreditNotifications
     * const userCreditNotifications = await prisma.userCreditNotification.findMany()
     * 
     * // Get first 10 UserCreditNotifications
     * const userCreditNotifications = await prisma.userCreditNotification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userCreditNotificationWithIdOnly = await prisma.userCreditNotification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserCreditNotificationFindManyArgs>(args?: SelectSubset<T, UserCreditNotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a UserCreditNotification.
     * @param {UserCreditNotificationCreateArgs} args - Arguments to create a UserCreditNotification.
     * @example
     * // Create one UserCreditNotification
     * const UserCreditNotification = await prisma.userCreditNotification.create({
     *   data: {
     *     // ... data to create a UserCreditNotification
     *   }
     * })
     * 
     */
    create<T extends UserCreditNotificationCreateArgs>(args: SelectSubset<T, UserCreditNotificationCreateArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many UserCreditNotifications.
     * @param {UserCreditNotificationCreateManyArgs} args - Arguments to create many UserCreditNotifications.
     * @example
     * // Create many UserCreditNotifications
     * const userCreditNotification = await prisma.userCreditNotification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreditNotificationCreateManyArgs>(args?: SelectSubset<T, UserCreditNotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserCreditNotifications and returns the data saved in the database.
     * @param {UserCreditNotificationCreateManyAndReturnArgs} args - Arguments to create many UserCreditNotifications.
     * @example
     * // Create many UserCreditNotifications
     * const userCreditNotification = await prisma.userCreditNotification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserCreditNotifications and only return the `id`
     * const userCreditNotificationWithIdOnly = await prisma.userCreditNotification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreditNotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreditNotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a UserCreditNotification.
     * @param {UserCreditNotificationDeleteArgs} args - Arguments to delete one UserCreditNotification.
     * @example
     * // Delete one UserCreditNotification
     * const UserCreditNotification = await prisma.userCreditNotification.delete({
     *   where: {
     *     // ... filter to delete one UserCreditNotification
     *   }
     * })
     * 
     */
    delete<T extends UserCreditNotificationDeleteArgs>(args: SelectSubset<T, UserCreditNotificationDeleteArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one UserCreditNotification.
     * @param {UserCreditNotificationUpdateArgs} args - Arguments to update one UserCreditNotification.
     * @example
     * // Update one UserCreditNotification
     * const userCreditNotification = await prisma.userCreditNotification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserCreditNotificationUpdateArgs>(args: SelectSubset<T, UserCreditNotificationUpdateArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more UserCreditNotifications.
     * @param {UserCreditNotificationDeleteManyArgs} args - Arguments to filter UserCreditNotifications to delete.
     * @example
     * // Delete a few UserCreditNotifications
     * const { count } = await prisma.userCreditNotification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserCreditNotificationDeleteManyArgs>(args?: SelectSubset<T, UserCreditNotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserCreditNotifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserCreditNotifications
     * const userCreditNotification = await prisma.userCreditNotification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserCreditNotificationUpdateManyArgs>(args: SelectSubset<T, UserCreditNotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserCreditNotifications and returns the data updated in the database.
     * @param {UserCreditNotificationUpdateManyAndReturnArgs} args - Arguments to update many UserCreditNotifications.
     * @example
     * // Update many UserCreditNotifications
     * const userCreditNotification = await prisma.userCreditNotification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserCreditNotifications and only return the `id`
     * const userCreditNotificationWithIdOnly = await prisma.userCreditNotification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserCreditNotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, UserCreditNotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one UserCreditNotification.
     * @param {UserCreditNotificationUpsertArgs} args - Arguments to update or create a UserCreditNotification.
     * @example
     * // Update or create a UserCreditNotification
     * const userCreditNotification = await prisma.userCreditNotification.upsert({
     *   create: {
     *     // ... data to create a UserCreditNotification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserCreditNotification we want to update
     *   }
     * })
     */
    upsert<T extends UserCreditNotificationUpsertArgs>(args: SelectSubset<T, UserCreditNotificationUpsertArgs<ExtArgs>>): Prisma__UserCreditNotificationClient<$Result.GetResult<Prisma.$UserCreditNotificationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of UserCreditNotifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationCountArgs} args - Arguments to filter UserCreditNotifications to count.
     * @example
     * // Count the number of UserCreditNotifications
     * const count = await prisma.userCreditNotification.count({
     *   where: {
     *     // ... the filter for the UserCreditNotifications we want to count
     *   }
     * })
    **/
    count<T extends UserCreditNotificationCountArgs>(
      args?: Subset<T, UserCreditNotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCreditNotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserCreditNotification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserCreditNotificationAggregateArgs>(args: Subset<T, UserCreditNotificationAggregateArgs>): Prisma.PrismaPromise<GetUserCreditNotificationAggregateType<T>>

    /**
     * Group by UserCreditNotification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCreditNotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserCreditNotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserCreditNotificationGroupByArgs['orderBy'] }
        : { orderBy?: UserCreditNotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserCreditNotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserCreditNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserCreditNotification model
   */
  readonly fields: UserCreditNotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserCreditNotification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserCreditNotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserCreditNotification model
   */ 
  interface UserCreditNotificationFieldRefs {
    readonly id: FieldRef<"UserCreditNotification", 'String'>
    readonly credit: FieldRef<"UserCreditNotification", 'Float'>
    readonly lastSent: FieldRef<"UserCreditNotification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserCreditNotification findUnique
   */
  export type UserCreditNotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * Filter, which UserCreditNotification to fetch.
     */
    where: UserCreditNotificationWhereUniqueInput
  }

  /**
   * UserCreditNotification findUniqueOrThrow
   */
  export type UserCreditNotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * Filter, which UserCreditNotification to fetch.
     */
    where: UserCreditNotificationWhereUniqueInput
  }

  /**
   * UserCreditNotification findFirst
   */
  export type UserCreditNotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * Filter, which UserCreditNotification to fetch.
     */
    where?: UserCreditNotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCreditNotifications to fetch.
     */
    orderBy?: UserCreditNotificationOrderByWithRelationInput | UserCreditNotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserCreditNotifications.
     */
    cursor?: UserCreditNotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCreditNotifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCreditNotifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserCreditNotifications.
     */
    distinct?: UserCreditNotificationScalarFieldEnum | UserCreditNotificationScalarFieldEnum[]
  }

  /**
   * UserCreditNotification findFirstOrThrow
   */
  export type UserCreditNotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * Filter, which UserCreditNotification to fetch.
     */
    where?: UserCreditNotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCreditNotifications to fetch.
     */
    orderBy?: UserCreditNotificationOrderByWithRelationInput | UserCreditNotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserCreditNotifications.
     */
    cursor?: UserCreditNotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCreditNotifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCreditNotifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserCreditNotifications.
     */
    distinct?: UserCreditNotificationScalarFieldEnum | UserCreditNotificationScalarFieldEnum[]
  }

  /**
   * UserCreditNotification findMany
   */
  export type UserCreditNotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * Filter, which UserCreditNotifications to fetch.
     */
    where?: UserCreditNotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCreditNotifications to fetch.
     */
    orderBy?: UserCreditNotificationOrderByWithRelationInput | UserCreditNotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserCreditNotifications.
     */
    cursor?: UserCreditNotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCreditNotifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCreditNotifications.
     */
    skip?: number
    distinct?: UserCreditNotificationScalarFieldEnum | UserCreditNotificationScalarFieldEnum[]
  }

  /**
   * UserCreditNotification create
   */
  export type UserCreditNotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a UserCreditNotification.
     */
    data: XOR<UserCreditNotificationCreateInput, UserCreditNotificationUncheckedCreateInput>
  }

  /**
   * UserCreditNotification createMany
   */
  export type UserCreditNotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserCreditNotifications.
     */
    data: UserCreditNotificationCreateManyInput | UserCreditNotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserCreditNotification createManyAndReturn
   */
  export type UserCreditNotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * The data used to create many UserCreditNotifications.
     */
    data: UserCreditNotificationCreateManyInput | UserCreditNotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserCreditNotification update
   */
  export type UserCreditNotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a UserCreditNotification.
     */
    data: XOR<UserCreditNotificationUpdateInput, UserCreditNotificationUncheckedUpdateInput>
    /**
     * Choose, which UserCreditNotification to update.
     */
    where: UserCreditNotificationWhereUniqueInput
  }

  /**
   * UserCreditNotification updateMany
   */
  export type UserCreditNotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserCreditNotifications.
     */
    data: XOR<UserCreditNotificationUpdateManyMutationInput, UserCreditNotificationUncheckedUpdateManyInput>
    /**
     * Filter which UserCreditNotifications to update
     */
    where?: UserCreditNotificationWhereInput
    /**
     * Limit how many UserCreditNotifications to update.
     */
    limit?: number
  }

  /**
   * UserCreditNotification updateManyAndReturn
   */
  export type UserCreditNotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * The data used to update UserCreditNotifications.
     */
    data: XOR<UserCreditNotificationUpdateManyMutationInput, UserCreditNotificationUncheckedUpdateManyInput>
    /**
     * Filter which UserCreditNotifications to update
     */
    where?: UserCreditNotificationWhereInput
    /**
     * Limit how many UserCreditNotifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserCreditNotification upsert
   */
  export type UserCreditNotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the UserCreditNotification to update in case it exists.
     */
    where: UserCreditNotificationWhereUniqueInput
    /**
     * In case the UserCreditNotification found by the `where` argument doesn't exist, create a new UserCreditNotification with this data.
     */
    create: XOR<UserCreditNotificationCreateInput, UserCreditNotificationUncheckedCreateInput>
    /**
     * In case the UserCreditNotification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserCreditNotificationUpdateInput, UserCreditNotificationUncheckedUpdateInput>
  }

  /**
   * UserCreditNotification delete
   */
  export type UserCreditNotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
    /**
     * Filter which UserCreditNotification to delete.
     */
    where: UserCreditNotificationWhereUniqueInput
  }

  /**
   * UserCreditNotification deleteMany
   */
  export type UserCreditNotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserCreditNotifications to delete
     */
    where?: UserCreditNotificationWhereInput
    /**
     * Limit how many UserCreditNotifications to delete.
     */
    limit?: number
  }

  /**
   * UserCreditNotification without action
   */
  export type UserCreditNotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCreditNotification
     */
    select?: UserCreditNotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCreditNotification
     */
    omit?: UserCreditNotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCreditNotificationInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    categoriesName: string | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    categoriesName: string | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    categoriesName: number
    createdOn: number
    updatedOn: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type CategoryMinAggregateInputType = {
    id?: true
    categoriesName?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    categoriesName?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    categoriesName?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    categoriesName: string
    createdOn: Date
    updatedOn: Date
    createdBy: string | null
    updatedBy: string | null
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoriesName?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    services?: boolean | Category$servicesArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoriesName?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoriesName?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    categoriesName?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoriesName" | "createdOn" | "updatedOn" | "createdBy" | "updatedBy", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services?: boolean | Category$servicesArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      services: Prisma.$ServicePayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      categoriesName: string
      createdOn: Date
      updatedOn: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    services<T extends Category$servicesArgs<ExtArgs> = {}>(args?: Subset<T, Category$servicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    createdByUser<T extends Category$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    updatedByUser<T extends Category$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */ 
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly categoriesName: FieldRef<"Category", 'String'>
    readonly createdOn: FieldRef<"Category", 'DateTime'>
    readonly updatedOn: FieldRef<"Category", 'DateTime'>
    readonly createdBy: FieldRef<"Category", 'String'>
    readonly updatedBy: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.services
   */
  export type Category$servicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Category.createdByUser
   */
  export type Category$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.updatedByUser
   */
  export type Category$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Service
   */

  export type AggregateService = {
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  export type ServiceAvgAggregateOutputType = {
    price: number | null
    order: number | null
  }

  export type ServiceSumAggregateOutputType = {
    price: number | null
    order: number | null
  }

  export type ServiceMinAggregateOutputType = {
    id: string | null
    name: string | null
    apiCategoriesId: string | null
    price: number | null
    description: string | null
    description_EN: string | null
    order: number | null
    urlPath: string | null
    useCaseDetail1: string | null
    useCaseDetail1_EN: string | null
    useCaseDetail2: string | null
    useCaseDetail2_EN: string | null
    useCaseDetail3: string | null
    useCaseDetail3_EN: string | null
    useCaseImagePath: string | null
    imagePath: string | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
    docsUrl: string | null
    isFeaturedProducts: boolean | null
    icon: string | null
  }

  export type ServiceMaxAggregateOutputType = {
    id: string | null
    name: string | null
    apiCategoriesId: string | null
    price: number | null
    description: string | null
    description_EN: string | null
    order: number | null
    urlPath: string | null
    useCaseDetail1: string | null
    useCaseDetail1_EN: string | null
    useCaseDetail2: string | null
    useCaseDetail2_EN: string | null
    useCaseDetail3: string | null
    useCaseDetail3_EN: string | null
    useCaseImagePath: string | null
    imagePath: string | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
    docsUrl: string | null
    isFeaturedProducts: boolean | null
    icon: string | null
  }

  export type ServiceCountAggregateOutputType = {
    id: number
    name: number
    apiCategoriesId: number
    price: number
    description: number
    description_EN: number
    order: number
    urlPath: number
    useCaseDetail1: number
    useCaseDetail1_EN: number
    useCaseDetail2: number
    useCaseDetail2_EN: number
    useCaseDetail3: number
    useCaseDetail3_EN: number
    useCaseImagePath: number
    imagePath: number
    createdOn: number
    updatedOn: number
    createdBy: number
    updatedBy: number
    docsUrl: number
    isFeaturedProducts: number
    icon: number
    _all: number
  }


  export type ServiceAvgAggregateInputType = {
    price?: true
    order?: true
  }

  export type ServiceSumAggregateInputType = {
    price?: true
    order?: true
  }

  export type ServiceMinAggregateInputType = {
    id?: true
    name?: true
    apiCategoriesId?: true
    price?: true
    description?: true
    description_EN?: true
    order?: true
    urlPath?: true
    useCaseDetail1?: true
    useCaseDetail1_EN?: true
    useCaseDetail2?: true
    useCaseDetail2_EN?: true
    useCaseDetail3?: true
    useCaseDetail3_EN?: true
    useCaseImagePath?: true
    imagePath?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
    docsUrl?: true
    isFeaturedProducts?: true
    icon?: true
  }

  export type ServiceMaxAggregateInputType = {
    id?: true
    name?: true
    apiCategoriesId?: true
    price?: true
    description?: true
    description_EN?: true
    order?: true
    urlPath?: true
    useCaseDetail1?: true
    useCaseDetail1_EN?: true
    useCaseDetail2?: true
    useCaseDetail2_EN?: true
    useCaseDetail3?: true
    useCaseDetail3_EN?: true
    useCaseImagePath?: true
    imagePath?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
    docsUrl?: true
    isFeaturedProducts?: true
    icon?: true
  }

  export type ServiceCountAggregateInputType = {
    id?: true
    name?: true
    apiCategoriesId?: true
    price?: true
    description?: true
    description_EN?: true
    order?: true
    urlPath?: true
    useCaseDetail1?: true
    useCaseDetail1_EN?: true
    useCaseDetail2?: true
    useCaseDetail2_EN?: true
    useCaseDetail3?: true
    useCaseDetail3_EN?: true
    useCaseImagePath?: true
    imagePath?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
    docsUrl?: true
    isFeaturedProducts?: true
    icon?: true
    _all?: true
  }

  export type ServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Service to aggregate.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Services
    **/
    _count?: true | ServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceMaxAggregateInputType
  }

  export type GetServiceAggregateType<T extends ServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService[P]>
      : GetScalarType<T[P], AggregateService[P]>
  }




  export type ServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithAggregationInput | ServiceOrderByWithAggregationInput[]
    by: ServiceScalarFieldEnum[] | ServiceScalarFieldEnum
    having?: ServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceCountAggregateInputType | true
    _avg?: ServiceAvgAggregateInputType
    _sum?: ServiceSumAggregateInputType
    _min?: ServiceMinAggregateInputType
    _max?: ServiceMaxAggregateInputType
  }

  export type ServiceGroupByOutputType = {
    id: string
    name: string
    apiCategoriesId: string
    price: number | null
    description: string | null
    description_EN: string | null
    order: number | null
    urlPath: string | null
    useCaseDetail1: string | null
    useCaseDetail1_EN: string | null
    useCaseDetail2: string | null
    useCaseDetail2_EN: string | null
    useCaseDetail3: string | null
    useCaseDetail3_EN: string | null
    useCaseImagePath: string | null
    imagePath: string | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
    docsUrl: string | null
    isFeaturedProducts: boolean | null
    icon: string | null
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  type GetServiceGroupByPayload<T extends ServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceGroupByOutputType[P]>
        }
      >
    >


  export type ServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    apiCategoriesId?: boolean
    price?: boolean
    description?: boolean
    description_EN?: boolean
    order?: boolean
    urlPath?: boolean
    useCaseDetail1?: boolean
    useCaseDetail1_EN?: boolean
    useCaseDetail2?: boolean
    useCaseDetail2_EN?: boolean
    useCaseDetail3?: boolean
    useCaseDetail3_EN?: boolean
    useCaseImagePath?: boolean
    imagePath?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    docsUrl?: boolean
    isFeaturedProducts?: boolean
    icon?: boolean
    category?: boolean | Service$categoryArgs<ExtArgs>
    createdByUser?: boolean | Service$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Service$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type ServiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    apiCategoriesId?: boolean
    price?: boolean
    description?: boolean
    description_EN?: boolean
    order?: boolean
    urlPath?: boolean
    useCaseDetail1?: boolean
    useCaseDetail1_EN?: boolean
    useCaseDetail2?: boolean
    useCaseDetail2_EN?: boolean
    useCaseDetail3?: boolean
    useCaseDetail3_EN?: boolean
    useCaseImagePath?: boolean
    imagePath?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    docsUrl?: boolean
    isFeaturedProducts?: boolean
    icon?: boolean
    category?: boolean | Service$categoryArgs<ExtArgs>
    createdByUser?: boolean | Service$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Service$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type ServiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    apiCategoriesId?: boolean
    price?: boolean
    description?: boolean
    description_EN?: boolean
    order?: boolean
    urlPath?: boolean
    useCaseDetail1?: boolean
    useCaseDetail1_EN?: boolean
    useCaseDetail2?: boolean
    useCaseDetail2_EN?: boolean
    useCaseDetail3?: boolean
    useCaseDetail3_EN?: boolean
    useCaseImagePath?: boolean
    imagePath?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    docsUrl?: boolean
    isFeaturedProducts?: boolean
    icon?: boolean
    category?: boolean | Service$categoryArgs<ExtArgs>
    createdByUser?: boolean | Service$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Service$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type ServiceSelectScalar = {
    id?: boolean
    name?: boolean
    apiCategoriesId?: boolean
    price?: boolean
    description?: boolean
    description_EN?: boolean
    order?: boolean
    urlPath?: boolean
    useCaseDetail1?: boolean
    useCaseDetail1_EN?: boolean
    useCaseDetail2?: boolean
    useCaseDetail2_EN?: boolean
    useCaseDetail3?: boolean
    useCaseDetail3_EN?: boolean
    useCaseImagePath?: boolean
    imagePath?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    docsUrl?: boolean
    isFeaturedProducts?: boolean
    icon?: boolean
  }

  export type ServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "apiCategoriesId" | "price" | "description" | "description_EN" | "order" | "urlPath" | "useCaseDetail1" | "useCaseDetail1_EN" | "useCaseDetail2" | "useCaseDetail2_EN" | "useCaseDetail3" | "useCaseDetail3_EN" | "useCaseImagePath" | "imagePath" | "createdOn" | "updatedOn" | "createdBy" | "updatedBy" | "docsUrl" | "isFeaturedProducts" | "icon", ExtArgs["result"]["service"]>
  export type ServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Service$categoryArgs<ExtArgs>
    createdByUser?: boolean | Service$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Service$updatedByUserArgs<ExtArgs>
  }
  export type ServiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Service$categoryArgs<ExtArgs>
    createdByUser?: boolean | Service$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Service$updatedByUserArgs<ExtArgs>
  }
  export type ServiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | Service$categoryArgs<ExtArgs>
    createdByUser?: boolean | Service$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Service$updatedByUserArgs<ExtArgs>
  }

  export type $ServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Service"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs> | null
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      apiCategoriesId: string
      price: number | null
      description: string | null
      description_EN: string | null
      order: number | null
      urlPath: string | null
      useCaseDetail1: string | null
      useCaseDetail1_EN: string | null
      useCaseDetail2: string | null
      useCaseDetail2_EN: string | null
      useCaseDetail3: string | null
      useCaseDetail3_EN: string | null
      useCaseImagePath: string | null
      imagePath: string | null
      createdOn: Date | null
      updatedOn: Date | null
      createdBy: string | null
      updatedBy: string | null
      docsUrl: string | null
      isFeaturedProducts: boolean | null
      icon: string | null
    }, ExtArgs["result"]["service"]>
    composites: {}
  }

  type ServiceGetPayload<S extends boolean | null | undefined | ServiceDefaultArgs> = $Result.GetResult<Prisma.$ServicePayload, S>

  type ServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceCountAggregateInputType | true
    }

  export interface ServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Service'], meta: { name: 'Service' } }
    /**
     * Find zero or one Service that matches the filter.
     * @param {ServiceFindUniqueArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceFindUniqueArgs>(args: SelectSubset<T, ServiceFindUniqueArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Service that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceFindUniqueOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Service that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindFirstArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceFindFirstArgs>(args?: SelectSubset<T, ServiceFindFirstArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Service that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindFirstOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services
     * const services = await prisma.service.findMany()
     * 
     * // Get first 10 Services
     * const services = await prisma.service.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceWithIdOnly = await prisma.service.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceFindManyArgs>(args?: SelectSubset<T, ServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Service.
     * @param {ServiceCreateArgs} args - Arguments to create a Service.
     * @example
     * // Create one Service
     * const Service = await prisma.service.create({
     *   data: {
     *     // ... data to create a Service
     *   }
     * })
     * 
     */
    create<T extends ServiceCreateArgs>(args: SelectSubset<T, ServiceCreateArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Services.
     * @param {ServiceCreateManyArgs} args - Arguments to create many Services.
     * @example
     * // Create many Services
     * const service = await prisma.service.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceCreateManyArgs>(args?: SelectSubset<T, ServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Services and returns the data saved in the database.
     * @param {ServiceCreateManyAndReturnArgs} args - Arguments to create many Services.
     * @example
     * // Create many Services
     * const service = await prisma.service.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Services and only return the `id`
     * const serviceWithIdOnly = await prisma.service.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Service.
     * @param {ServiceDeleteArgs} args - Arguments to delete one Service.
     * @example
     * // Delete one Service
     * const Service = await prisma.service.delete({
     *   where: {
     *     // ... filter to delete one Service
     *   }
     * })
     * 
     */
    delete<T extends ServiceDeleteArgs>(args: SelectSubset<T, ServiceDeleteArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Service.
     * @param {ServiceUpdateArgs} args - Arguments to update one Service.
     * @example
     * // Update one Service
     * const service = await prisma.service.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceUpdateArgs>(args: SelectSubset<T, ServiceUpdateArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Services.
     * @param {ServiceDeleteManyArgs} args - Arguments to filter Services to delete.
     * @example
     * // Delete a few Services
     * const { count } = await prisma.service.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceDeleteManyArgs>(args?: SelectSubset<T, ServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceUpdateManyArgs>(args: SelectSubset<T, ServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services and returns the data updated in the database.
     * @param {ServiceUpdateManyAndReturnArgs} args - Arguments to update many Services.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Services and only return the `id`
     * const serviceWithIdOnly = await prisma.service.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Service.
     * @param {ServiceUpsertArgs} args - Arguments to update or create a Service.
     * @example
     * // Update or create a Service
     * const service = await prisma.service.upsert({
     *   create: {
     *     // ... data to create a Service
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service we want to update
     *   }
     * })
     */
    upsert<T extends ServiceUpsertArgs>(args: SelectSubset<T, ServiceUpsertArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCountArgs} args - Arguments to filter Services to count.
     * @example
     * // Count the number of Services
     * const count = await prisma.service.count({
     *   where: {
     *     // ... the filter for the Services we want to count
     *   }
     * })
    **/
    count<T extends ServiceCountArgs>(
      args?: Subset<T, ServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceAggregateArgs>(args: Subset<T, ServiceAggregateArgs>): Prisma.PrismaPromise<GetServiceAggregateType<T>>

    /**
     * Group by Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceGroupByArgs['orderBy'] }
        : { orderBy?: ServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Service model
   */
  readonly fields: ServiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Service.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends Service$categoryArgs<ExtArgs> = {}>(args?: Subset<T, Service$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    createdByUser<T extends Service$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Service$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    updatedByUser<T extends Service$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Service$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Service model
   */ 
  interface ServiceFieldRefs {
    readonly id: FieldRef<"Service", 'String'>
    readonly name: FieldRef<"Service", 'String'>
    readonly apiCategoriesId: FieldRef<"Service", 'String'>
    readonly price: FieldRef<"Service", 'Float'>
    readonly description: FieldRef<"Service", 'String'>
    readonly description_EN: FieldRef<"Service", 'String'>
    readonly order: FieldRef<"Service", 'Int'>
    readonly urlPath: FieldRef<"Service", 'String'>
    readonly useCaseDetail1: FieldRef<"Service", 'String'>
    readonly useCaseDetail1_EN: FieldRef<"Service", 'String'>
    readonly useCaseDetail2: FieldRef<"Service", 'String'>
    readonly useCaseDetail2_EN: FieldRef<"Service", 'String'>
    readonly useCaseDetail3: FieldRef<"Service", 'String'>
    readonly useCaseDetail3_EN: FieldRef<"Service", 'String'>
    readonly useCaseImagePath: FieldRef<"Service", 'String'>
    readonly imagePath: FieldRef<"Service", 'String'>
    readonly createdOn: FieldRef<"Service", 'DateTime'>
    readonly updatedOn: FieldRef<"Service", 'DateTime'>
    readonly createdBy: FieldRef<"Service", 'String'>
    readonly updatedBy: FieldRef<"Service", 'String'>
    readonly docsUrl: FieldRef<"Service", 'String'>
    readonly isFeaturedProducts: FieldRef<"Service", 'Boolean'>
    readonly icon: FieldRef<"Service", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Service findUnique
   */
  export type ServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service findUniqueOrThrow
   */
  export type ServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service findFirst
   */
  export type ServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service findFirstOrThrow
   */
  export type ServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service findMany
   */
  export type ServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Services to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service create
   */
  export type ServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Service.
     */
    data: XOR<ServiceCreateInput, ServiceUncheckedCreateInput>
  }

  /**
   * Service createMany
   */
  export type ServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Services.
     */
    data: ServiceCreateManyInput | ServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Service createManyAndReturn
   */
  export type ServiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * The data used to create many Services.
     */
    data: ServiceCreateManyInput | ServiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Service update
   */
  export type ServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Service.
     */
    data: XOR<ServiceUpdateInput, ServiceUncheckedUpdateInput>
    /**
     * Choose, which Service to update.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service updateMany
   */
  export type ServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Services.
     */
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyInput>
    /**
     * Filter which Services to update
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to update.
     */
    limit?: number
  }

  /**
   * Service updateManyAndReturn
   */
  export type ServiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * The data used to update Services.
     */
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyInput>
    /**
     * Filter which Services to update
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Service upsert
   */
  export type ServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Service to update in case it exists.
     */
    where: ServiceWhereUniqueInput
    /**
     * In case the Service found by the `where` argument doesn't exist, create a new Service with this data.
     */
    create: XOR<ServiceCreateInput, ServiceUncheckedCreateInput>
    /**
     * In case the Service was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceUpdateInput, ServiceUncheckedUpdateInput>
  }

  /**
   * Service delete
   */
  export type ServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter which Service to delete.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service deleteMany
   */
  export type ServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Services to delete
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to delete.
     */
    limit?: number
  }

  /**
   * Service.category
   */
  export type Service$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Service.createdByUser
   */
  export type Service$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Service.updatedByUser
   */
  export type Service$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Service without action
   */
  export type ServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
  }


  /**
   * Model Pricing
   */

  export type AggregatePricing = {
    _count: PricingCountAggregateOutputType | null
    _avg: PricingAvgAggregateOutputType | null
    _sum: PricingSumAggregateOutputType | null
    _min: PricingMinAggregateOutputType | null
    _max: PricingMaxAggregateOutputType | null
  }

  export type PricingAvgAggregateOutputType = {
    icPerPrice: number | null
    validatePeriod: number | null
    min: number | null
    max: number | null
  }

  export type PricingSumAggregateOutputType = {
    icPerPrice: number | null
    validatePeriod: number | null
    min: number | null
    max: number | null
  }

  export type PricingMinAggregateOutputType = {
    id: string | null
    icPerPrice: number | null
    validatePeriod: number | null
    min: number | null
    max: number | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type PricingMaxAggregateOutputType = {
    id: string | null
    icPerPrice: number | null
    validatePeriod: number | null
    min: number | null
    max: number | null
    createdOn: Date | null
    updatedOn: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type PricingCountAggregateOutputType = {
    id: number
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn: number
    updatedOn: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type PricingAvgAggregateInputType = {
    icPerPrice?: true
    validatePeriod?: true
    min?: true
    max?: true
  }

  export type PricingSumAggregateInputType = {
    icPerPrice?: true
    validatePeriod?: true
    min?: true
    max?: true
  }

  export type PricingMinAggregateInputType = {
    id?: true
    icPerPrice?: true
    validatePeriod?: true
    min?: true
    max?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
  }

  export type PricingMaxAggregateInputType = {
    id?: true
    icPerPrice?: true
    validatePeriod?: true
    min?: true
    max?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
  }

  export type PricingCountAggregateInputType = {
    id?: true
    icPerPrice?: true
    validatePeriod?: true
    min?: true
    max?: true
    createdOn?: true
    updatedOn?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type PricingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pricing to aggregate.
     */
    where?: PricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pricings to fetch.
     */
    orderBy?: PricingOrderByWithRelationInput | PricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pricings
    **/
    _count?: true | PricingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PricingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PricingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PricingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PricingMaxAggregateInputType
  }

  export type GetPricingAggregateType<T extends PricingAggregateArgs> = {
        [P in keyof T & keyof AggregatePricing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePricing[P]>
      : GetScalarType<T[P], AggregatePricing[P]>
  }




  export type PricingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PricingWhereInput
    orderBy?: PricingOrderByWithAggregationInput | PricingOrderByWithAggregationInput[]
    by: PricingScalarFieldEnum[] | PricingScalarFieldEnum
    having?: PricingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PricingCountAggregateInputType | true
    _avg?: PricingAvgAggregateInputType
    _sum?: PricingSumAggregateInputType
    _min?: PricingMinAggregateInputType
    _max?: PricingMaxAggregateInputType
  }

  export type PricingGroupByOutputType = {
    id: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn: Date
    updatedOn: Date
    createdBy: string | null
    updatedBy: string | null
    _count: PricingCountAggregateOutputType | null
    _avg: PricingAvgAggregateOutputType | null
    _sum: PricingSumAggregateOutputType | null
    _min: PricingMinAggregateOutputType | null
    _max: PricingMaxAggregateOutputType | null
  }

  type GetPricingGroupByPayload<T extends PricingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PricingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PricingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PricingGroupByOutputType[P]>
            : GetScalarType<T[P], PricingGroupByOutputType[P]>
        }
      >
    >


  export type PricingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    icPerPrice?: boolean
    validatePeriod?: boolean
    min?: boolean
    max?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdByUser?: boolean | Pricing$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Pricing$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["pricing"]>

  export type PricingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    icPerPrice?: boolean
    validatePeriod?: boolean
    min?: boolean
    max?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdByUser?: boolean | Pricing$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Pricing$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["pricing"]>

  export type PricingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    icPerPrice?: boolean
    validatePeriod?: boolean
    min?: boolean
    max?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    createdByUser?: boolean | Pricing$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Pricing$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["pricing"]>

  export type PricingSelectScalar = {
    id?: boolean
    icPerPrice?: boolean
    validatePeriod?: boolean
    min?: boolean
    max?: boolean
    createdOn?: boolean
    updatedOn?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type PricingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "icPerPrice" | "validatePeriod" | "min" | "max" | "createdOn" | "updatedOn" | "createdBy" | "updatedBy", ExtArgs["result"]["pricing"]>
  export type PricingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Pricing$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Pricing$updatedByUserArgs<ExtArgs>
  }
  export type PricingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Pricing$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Pricing$updatedByUserArgs<ExtArgs>
  }
  export type PricingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Pricing$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Pricing$updatedByUserArgs<ExtArgs>
  }

  export type $PricingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pricing"
    objects: {
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      icPerPrice: number
      validatePeriod: number
      min: number
      max: number
      createdOn: Date
      updatedOn: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["pricing"]>
    composites: {}
  }

  type PricingGetPayload<S extends boolean | null | undefined | PricingDefaultArgs> = $Result.GetResult<Prisma.$PricingPayload, S>

  type PricingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PricingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PricingCountAggregateInputType | true
    }

  export interface PricingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pricing'], meta: { name: 'Pricing' } }
    /**
     * Find zero or one Pricing that matches the filter.
     * @param {PricingFindUniqueArgs} args - Arguments to find a Pricing
     * @example
     * // Get one Pricing
     * const pricing = await prisma.pricing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PricingFindUniqueArgs>(args: SelectSubset<T, PricingFindUniqueArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Pricing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PricingFindUniqueOrThrowArgs} args - Arguments to find a Pricing
     * @example
     * // Get one Pricing
     * const pricing = await prisma.pricing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PricingFindUniqueOrThrowArgs>(args: SelectSubset<T, PricingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Pricing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingFindFirstArgs} args - Arguments to find a Pricing
     * @example
     * // Get one Pricing
     * const pricing = await prisma.pricing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PricingFindFirstArgs>(args?: SelectSubset<T, PricingFindFirstArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Pricing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingFindFirstOrThrowArgs} args - Arguments to find a Pricing
     * @example
     * // Get one Pricing
     * const pricing = await prisma.pricing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PricingFindFirstOrThrowArgs>(args?: SelectSubset<T, PricingFindFirstOrThrowArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Pricings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pricings
     * const pricings = await prisma.pricing.findMany()
     * 
     * // Get first 10 Pricings
     * const pricings = await prisma.pricing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pricingWithIdOnly = await prisma.pricing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PricingFindManyArgs>(args?: SelectSubset<T, PricingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Pricing.
     * @param {PricingCreateArgs} args - Arguments to create a Pricing.
     * @example
     * // Create one Pricing
     * const Pricing = await prisma.pricing.create({
     *   data: {
     *     // ... data to create a Pricing
     *   }
     * })
     * 
     */
    create<T extends PricingCreateArgs>(args: SelectSubset<T, PricingCreateArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Pricings.
     * @param {PricingCreateManyArgs} args - Arguments to create many Pricings.
     * @example
     * // Create many Pricings
     * const pricing = await prisma.pricing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PricingCreateManyArgs>(args?: SelectSubset<T, PricingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pricings and returns the data saved in the database.
     * @param {PricingCreateManyAndReturnArgs} args - Arguments to create many Pricings.
     * @example
     * // Create many Pricings
     * const pricing = await prisma.pricing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pricings and only return the `id`
     * const pricingWithIdOnly = await prisma.pricing.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PricingCreateManyAndReturnArgs>(args?: SelectSubset<T, PricingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Pricing.
     * @param {PricingDeleteArgs} args - Arguments to delete one Pricing.
     * @example
     * // Delete one Pricing
     * const Pricing = await prisma.pricing.delete({
     *   where: {
     *     // ... filter to delete one Pricing
     *   }
     * })
     * 
     */
    delete<T extends PricingDeleteArgs>(args: SelectSubset<T, PricingDeleteArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Pricing.
     * @param {PricingUpdateArgs} args - Arguments to update one Pricing.
     * @example
     * // Update one Pricing
     * const pricing = await prisma.pricing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PricingUpdateArgs>(args: SelectSubset<T, PricingUpdateArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Pricings.
     * @param {PricingDeleteManyArgs} args - Arguments to filter Pricings to delete.
     * @example
     * // Delete a few Pricings
     * const { count } = await prisma.pricing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PricingDeleteManyArgs>(args?: SelectSubset<T, PricingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pricings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pricings
     * const pricing = await prisma.pricing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PricingUpdateManyArgs>(args: SelectSubset<T, PricingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pricings and returns the data updated in the database.
     * @param {PricingUpdateManyAndReturnArgs} args - Arguments to update many Pricings.
     * @example
     * // Update many Pricings
     * const pricing = await prisma.pricing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pricings and only return the `id`
     * const pricingWithIdOnly = await prisma.pricing.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PricingUpdateManyAndReturnArgs>(args: SelectSubset<T, PricingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Pricing.
     * @param {PricingUpsertArgs} args - Arguments to update or create a Pricing.
     * @example
     * // Update or create a Pricing
     * const pricing = await prisma.pricing.upsert({
     *   create: {
     *     // ... data to create a Pricing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pricing we want to update
     *   }
     * })
     */
    upsert<T extends PricingUpsertArgs>(args: SelectSubset<T, PricingUpsertArgs<ExtArgs>>): Prisma__PricingClient<$Result.GetResult<Prisma.$PricingPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Pricings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingCountArgs} args - Arguments to filter Pricings to count.
     * @example
     * // Count the number of Pricings
     * const count = await prisma.pricing.count({
     *   where: {
     *     // ... the filter for the Pricings we want to count
     *   }
     * })
    **/
    count<T extends PricingCountArgs>(
      args?: Subset<T, PricingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PricingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pricing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PricingAggregateArgs>(args: Subset<T, PricingAggregateArgs>): Prisma.PrismaPromise<GetPricingAggregateType<T>>

    /**
     * Group by Pricing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PricingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PricingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PricingGroupByArgs['orderBy'] }
        : { orderBy?: PricingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PricingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPricingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pricing model
   */
  readonly fields: PricingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pricing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PricingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdByUser<T extends Pricing$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Pricing$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    updatedByUser<T extends Pricing$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Pricing$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pricing model
   */ 
  interface PricingFieldRefs {
    readonly id: FieldRef<"Pricing", 'String'>
    readonly icPerPrice: FieldRef<"Pricing", 'Float'>
    readonly validatePeriod: FieldRef<"Pricing", 'Int'>
    readonly min: FieldRef<"Pricing", 'Float'>
    readonly max: FieldRef<"Pricing", 'Float'>
    readonly createdOn: FieldRef<"Pricing", 'DateTime'>
    readonly updatedOn: FieldRef<"Pricing", 'DateTime'>
    readonly createdBy: FieldRef<"Pricing", 'String'>
    readonly updatedBy: FieldRef<"Pricing", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Pricing findUnique
   */
  export type PricingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * Filter, which Pricing to fetch.
     */
    where: PricingWhereUniqueInput
  }

  /**
   * Pricing findUniqueOrThrow
   */
  export type PricingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * Filter, which Pricing to fetch.
     */
    where: PricingWhereUniqueInput
  }

  /**
   * Pricing findFirst
   */
  export type PricingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * Filter, which Pricing to fetch.
     */
    where?: PricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pricings to fetch.
     */
    orderBy?: PricingOrderByWithRelationInput | PricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pricings.
     */
    cursor?: PricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pricings.
     */
    distinct?: PricingScalarFieldEnum | PricingScalarFieldEnum[]
  }

  /**
   * Pricing findFirstOrThrow
   */
  export type PricingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * Filter, which Pricing to fetch.
     */
    where?: PricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pricings to fetch.
     */
    orderBy?: PricingOrderByWithRelationInput | PricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pricings.
     */
    cursor?: PricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pricings.
     */
    distinct?: PricingScalarFieldEnum | PricingScalarFieldEnum[]
  }

  /**
   * Pricing findMany
   */
  export type PricingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * Filter, which Pricings to fetch.
     */
    where?: PricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pricings to fetch.
     */
    orderBy?: PricingOrderByWithRelationInput | PricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pricings.
     */
    cursor?: PricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pricings.
     */
    skip?: number
    distinct?: PricingScalarFieldEnum | PricingScalarFieldEnum[]
  }

  /**
   * Pricing create
   */
  export type PricingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * The data needed to create a Pricing.
     */
    data: XOR<PricingCreateInput, PricingUncheckedCreateInput>
  }

  /**
   * Pricing createMany
   */
  export type PricingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pricings.
     */
    data: PricingCreateManyInput | PricingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pricing createManyAndReturn
   */
  export type PricingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * The data used to create many Pricings.
     */
    data: PricingCreateManyInput | PricingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pricing update
   */
  export type PricingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * The data needed to update a Pricing.
     */
    data: XOR<PricingUpdateInput, PricingUncheckedUpdateInput>
    /**
     * Choose, which Pricing to update.
     */
    where: PricingWhereUniqueInput
  }

  /**
   * Pricing updateMany
   */
  export type PricingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pricings.
     */
    data: XOR<PricingUpdateManyMutationInput, PricingUncheckedUpdateManyInput>
    /**
     * Filter which Pricings to update
     */
    where?: PricingWhereInput
    /**
     * Limit how many Pricings to update.
     */
    limit?: number
  }

  /**
   * Pricing updateManyAndReturn
   */
  export type PricingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * The data used to update Pricings.
     */
    data: XOR<PricingUpdateManyMutationInput, PricingUncheckedUpdateManyInput>
    /**
     * Filter which Pricings to update
     */
    where?: PricingWhereInput
    /**
     * Limit how many Pricings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pricing upsert
   */
  export type PricingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * The filter to search for the Pricing to update in case it exists.
     */
    where: PricingWhereUniqueInput
    /**
     * In case the Pricing found by the `where` argument doesn't exist, create a new Pricing with this data.
     */
    create: XOR<PricingCreateInput, PricingUncheckedCreateInput>
    /**
     * In case the Pricing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PricingUpdateInput, PricingUncheckedUpdateInput>
  }

  /**
   * Pricing delete
   */
  export type PricingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
    /**
     * Filter which Pricing to delete.
     */
    where: PricingWhereUniqueInput
  }

  /**
   * Pricing deleteMany
   */
  export type PricingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pricings to delete
     */
    where?: PricingWhereInput
    /**
     * Limit how many Pricings to delete.
     */
    limit?: number
  }

  /**
   * Pricing.createdByUser
   */
  export type Pricing$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Pricing.updatedByUser
   */
  export type Pricing$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Pricing without action
   */
  export type PricingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pricing
     */
    select?: PricingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pricing
     */
    omit?: PricingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PricingInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    phone: 'phone',
    name: 'name',
    picture: 'picture',
    role: 'role',
    verifyId: 'verifyId',
    notification: 'notification',
    allNotification: 'allNotification',
    method: 'method',
    status: 'status',
    google: 'google',
    facebook: 'facebook',
    provider: 'provider',
    creditBalance: 'creditBalance',
    creditPeriod: 'creditPeriod',
    consumersId: 'consumersId',
    salt: 'salt',
    token: 'token',
    rtoken: 'rtoken',
    ftoken: 'ftoken',
    gtoken: 'gtoken',
    pwExpiredOn: 'pwExpiredOn',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    createdOn: 'createdOn',
    updatedOn: 'updatedOn',
    taxName: 'taxName',
    taxNo: 'taxNo',
    taxAddress: 'taxAddress',
    profileImage: 'profileImage',
    faceCompanyName: 'faceCompanyName',
    faceCompanyPassword: 'faceCompanyPassword',
    profile: 'profile',
    signtoken: 'signtoken',
    credit: 'credit',
    subscription: 'subscription',
    type: 'type',
    originCreditBalance: 'originCreditBalance',
    createdAt: 'createdAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserVerifyScalarFieldEnum: {
    id: 'id',
    status: 'status',
    code: 'code',
    userId: 'userId'
  };

  export type UserVerifyScalarFieldEnum = (typeof UserVerifyScalarFieldEnum)[keyof typeof UserVerifyScalarFieldEnum]


  export const UserCreditNotificationScalarFieldEnum: {
    id: 'id',
    credit: 'credit',
    lastSent: 'lastSent'
  };

  export type UserCreditNotificationScalarFieldEnum = (typeof UserCreditNotificationScalarFieldEnum)[keyof typeof UserCreditNotificationScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    categoriesName: 'categoriesName',
    createdOn: 'createdOn',
    updatedOn: 'updatedOn',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const ServiceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    apiCategoriesId: 'apiCategoriesId',
    price: 'price',
    description: 'description',
    description_EN: 'description_EN',
    order: 'order',
    urlPath: 'urlPath',
    useCaseDetail1: 'useCaseDetail1',
    useCaseDetail1_EN: 'useCaseDetail1_EN',
    useCaseDetail2: 'useCaseDetail2',
    useCaseDetail2_EN: 'useCaseDetail2_EN',
    useCaseDetail3: 'useCaseDetail3',
    useCaseDetail3_EN: 'useCaseDetail3_EN',
    useCaseImagePath: 'useCaseImagePath',
    imagePath: 'imagePath',
    createdOn: 'createdOn',
    updatedOn: 'updatedOn',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    docsUrl: 'docsUrl',
    isFeaturedProducts: 'isFeaturedProducts',
    icon: 'icon'
  };

  export type ServiceScalarFieldEnum = (typeof ServiceScalarFieldEnum)[keyof typeof ServiceScalarFieldEnum]


  export const PricingScalarFieldEnum: {
    id: 'id',
    icPerPrice: 'icPerPrice',
    validatePeriod: 'validatePeriod',
    min: 'min',
    max: 'max',
    createdOn: 'createdOn',
    updatedOn: 'updatedOn',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type PricingScalarFieldEnum = (typeof PricingScalarFieldEnum)[keyof typeof PricingScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    name?: StringFilter<"User"> | string
    picture?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    verifyId?: StringNullableFilter<"User"> | string | null
    notification?: BoolFilter<"User"> | boolean
    allNotification?: BoolFilter<"User"> | boolean
    method?: StringNullableFilter<"User"> | string | null
    status?: StringFilter<"User"> | string
    google?: JsonNullableFilter<"User">
    facebook?: JsonNullableFilter<"User">
    provider?: StringFilter<"User"> | string
    creditBalance?: FloatFilter<"User"> | number
    creditPeriod?: DateTimeNullableFilter<"User"> | Date | string | null
    consumersId?: StringNullableFilter<"User"> | string | null
    salt?: StringNullableFilter<"User"> | string | null
    token?: StringNullableFilter<"User"> | string | null
    rtoken?: StringNullableFilter<"User"> | string | null
    ftoken?: StringNullableFilter<"User"> | string | null
    gtoken?: StringNullableFilter<"User"> | string | null
    pwExpiredOn?: DateTimeNullableFilter<"User"> | Date | string | null
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    createdOn?: DateTimeFilter<"User"> | Date | string
    updatedOn?: DateTimeFilter<"User"> | Date | string
    taxName?: StringNullableFilter<"User"> | string | null
    taxNo?: StringNullableFilter<"User"> | string | null
    taxAddress?: StringNullableFilter<"User"> | string | null
    profileImage?: StringNullableFilter<"User"> | string | null
    faceCompanyName?: StringNullableFilter<"User"> | string | null
    faceCompanyPassword?: StringNullableFilter<"User"> | string | null
    profile?: JsonNullableFilter<"User">
    signtoken?: JsonNullableFilter<"User">
    credit?: JsonNullableFilter<"User">
    subscription?: BoolFilter<"User"> | boolean
    type?: StringNullableFilter<"User"> | string | null
    originCreditBalance?: FloatNullableFilter<"User"> | number | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    verify?: XOR<UserVerifyNullableScalarRelationFilter, UserVerifyWhereInput> | null
    creditNotification?: XOR<UserCreditNotificationNullableScalarRelationFilter, UserCreditNotificationWhereInput> | null
    createdCategories?: CategoryListRelationFilter
    updatedCategories?: CategoryListRelationFilter
    createdServices?: ServiceListRelationFilter
    updatedServices?: ServiceListRelationFilter
    createdPricings?: PricingListRelationFilter
    updatedPricings?: PricingListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrderInput | SortOrder
    name?: SortOrder
    picture?: SortOrderInput | SortOrder
    role?: SortOrder
    verifyId?: SortOrderInput | SortOrder
    notification?: SortOrder
    allNotification?: SortOrder
    method?: SortOrderInput | SortOrder
    status?: SortOrder
    google?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    provider?: SortOrder
    creditBalance?: SortOrder
    creditPeriod?: SortOrderInput | SortOrder
    consumersId?: SortOrderInput | SortOrder
    salt?: SortOrderInput | SortOrder
    token?: SortOrderInput | SortOrder
    rtoken?: SortOrderInput | SortOrder
    ftoken?: SortOrderInput | SortOrder
    gtoken?: SortOrderInput | SortOrder
    pwExpiredOn?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    taxName?: SortOrderInput | SortOrder
    taxNo?: SortOrderInput | SortOrder
    taxAddress?: SortOrderInput | SortOrder
    profileImage?: SortOrderInput | SortOrder
    faceCompanyName?: SortOrderInput | SortOrder
    faceCompanyPassword?: SortOrderInput | SortOrder
    profile?: SortOrderInput | SortOrder
    signtoken?: SortOrderInput | SortOrder
    credit?: SortOrderInput | SortOrder
    subscription?: SortOrder
    type?: SortOrderInput | SortOrder
    originCreditBalance?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    verify?: UserVerifyOrderByWithRelationInput
    creditNotification?: UserCreditNotificationOrderByWithRelationInput
    createdCategories?: CategoryOrderByRelationAggregateInput
    updatedCategories?: CategoryOrderByRelationAggregateInput
    createdServices?: ServiceOrderByRelationAggregateInput
    updatedServices?: ServiceOrderByRelationAggregateInput
    createdPricings?: PricingOrderByRelationAggregateInput
    updatedPricings?: PricingOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    verifyId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    name?: StringFilter<"User"> | string
    picture?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    notification?: BoolFilter<"User"> | boolean
    allNotification?: BoolFilter<"User"> | boolean
    method?: StringNullableFilter<"User"> | string | null
    status?: StringFilter<"User"> | string
    google?: JsonNullableFilter<"User">
    facebook?: JsonNullableFilter<"User">
    provider?: StringFilter<"User"> | string
    creditBalance?: FloatFilter<"User"> | number
    creditPeriod?: DateTimeNullableFilter<"User"> | Date | string | null
    consumersId?: StringNullableFilter<"User"> | string | null
    salt?: StringNullableFilter<"User"> | string | null
    token?: StringNullableFilter<"User"> | string | null
    rtoken?: StringNullableFilter<"User"> | string | null
    ftoken?: StringNullableFilter<"User"> | string | null
    gtoken?: StringNullableFilter<"User"> | string | null
    pwExpiredOn?: DateTimeNullableFilter<"User"> | Date | string | null
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    createdOn?: DateTimeFilter<"User"> | Date | string
    updatedOn?: DateTimeFilter<"User"> | Date | string
    taxName?: StringNullableFilter<"User"> | string | null
    taxNo?: StringNullableFilter<"User"> | string | null
    taxAddress?: StringNullableFilter<"User"> | string | null
    profileImage?: StringNullableFilter<"User"> | string | null
    faceCompanyName?: StringNullableFilter<"User"> | string | null
    faceCompanyPassword?: StringNullableFilter<"User"> | string | null
    profile?: JsonNullableFilter<"User">
    signtoken?: JsonNullableFilter<"User">
    credit?: JsonNullableFilter<"User">
    subscription?: BoolFilter<"User"> | boolean
    type?: StringNullableFilter<"User"> | string | null
    originCreditBalance?: FloatNullableFilter<"User"> | number | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    verify?: XOR<UserVerifyNullableScalarRelationFilter, UserVerifyWhereInput> | null
    creditNotification?: XOR<UserCreditNotificationNullableScalarRelationFilter, UserCreditNotificationWhereInput> | null
    createdCategories?: CategoryListRelationFilter
    updatedCategories?: CategoryListRelationFilter
    createdServices?: ServiceListRelationFilter
    updatedServices?: ServiceListRelationFilter
    createdPricings?: PricingListRelationFilter
    updatedPricings?: PricingListRelationFilter
  }, "id" | "email" | "verifyId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrderInput | SortOrder
    name?: SortOrder
    picture?: SortOrderInput | SortOrder
    role?: SortOrder
    verifyId?: SortOrderInput | SortOrder
    notification?: SortOrder
    allNotification?: SortOrder
    method?: SortOrderInput | SortOrder
    status?: SortOrder
    google?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    provider?: SortOrder
    creditBalance?: SortOrder
    creditPeriod?: SortOrderInput | SortOrder
    consumersId?: SortOrderInput | SortOrder
    salt?: SortOrderInput | SortOrder
    token?: SortOrderInput | SortOrder
    rtoken?: SortOrderInput | SortOrder
    ftoken?: SortOrderInput | SortOrder
    gtoken?: SortOrderInput | SortOrder
    pwExpiredOn?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    taxName?: SortOrderInput | SortOrder
    taxNo?: SortOrderInput | SortOrder
    taxAddress?: SortOrderInput | SortOrder
    profileImage?: SortOrderInput | SortOrder
    faceCompanyName?: SortOrderInput | SortOrder
    faceCompanyPassword?: SortOrderInput | SortOrder
    profile?: SortOrderInput | SortOrder
    signtoken?: SortOrderInput | SortOrder
    credit?: SortOrderInput | SortOrder
    subscription?: SortOrder
    type?: SortOrderInput | SortOrder
    originCreditBalance?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    name?: StringWithAggregatesFilter<"User"> | string
    picture?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: StringWithAggregatesFilter<"User"> | string
    verifyId?: StringNullableWithAggregatesFilter<"User"> | string | null
    notification?: BoolWithAggregatesFilter<"User"> | boolean
    allNotification?: BoolWithAggregatesFilter<"User"> | boolean
    method?: StringNullableWithAggregatesFilter<"User"> | string | null
    status?: StringWithAggregatesFilter<"User"> | string
    google?: JsonNullableWithAggregatesFilter<"User">
    facebook?: JsonNullableWithAggregatesFilter<"User">
    provider?: StringWithAggregatesFilter<"User"> | string
    creditBalance?: FloatWithAggregatesFilter<"User"> | number
    creditPeriod?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    consumersId?: StringNullableWithAggregatesFilter<"User"> | string | null
    salt?: StringNullableWithAggregatesFilter<"User"> | string | null
    token?: StringNullableWithAggregatesFilter<"User"> | string | null
    rtoken?: StringNullableWithAggregatesFilter<"User"> | string | null
    ftoken?: StringNullableWithAggregatesFilter<"User"> | string | null
    gtoken?: StringNullableWithAggregatesFilter<"User"> | string | null
    pwExpiredOn?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdOn?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedOn?: DateTimeWithAggregatesFilter<"User"> | Date | string
    taxName?: StringNullableWithAggregatesFilter<"User"> | string | null
    taxNo?: StringNullableWithAggregatesFilter<"User"> | string | null
    taxAddress?: StringNullableWithAggregatesFilter<"User"> | string | null
    profileImage?: StringNullableWithAggregatesFilter<"User"> | string | null
    faceCompanyName?: StringNullableWithAggregatesFilter<"User"> | string | null
    faceCompanyPassword?: StringNullableWithAggregatesFilter<"User"> | string | null
    profile?: JsonNullableWithAggregatesFilter<"User">
    signtoken?: JsonNullableWithAggregatesFilter<"User">
    credit?: JsonNullableWithAggregatesFilter<"User">
    subscription?: BoolWithAggregatesFilter<"User"> | boolean
    type?: StringNullableWithAggregatesFilter<"User"> | string | null
    originCreditBalance?: FloatNullableWithAggregatesFilter<"User"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type UserVerifyWhereInput = {
    AND?: UserVerifyWhereInput | UserVerifyWhereInput[]
    OR?: UserVerifyWhereInput[]
    NOT?: UserVerifyWhereInput | UserVerifyWhereInput[]
    id?: StringFilter<"UserVerify"> | string
    status?: BoolFilter<"UserVerify"> | boolean
    code?: StringFilter<"UserVerify"> | string
    userId?: StringNullableFilter<"UserVerify"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type UserVerifyOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    code?: SortOrder
    userId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserVerifyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: UserVerifyWhereInput | UserVerifyWhereInput[]
    OR?: UserVerifyWhereInput[]
    NOT?: UserVerifyWhereInput | UserVerifyWhereInput[]
    status?: BoolFilter<"UserVerify"> | boolean
    code?: StringFilter<"UserVerify"> | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "userId">

  export type UserVerifyOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    code?: SortOrder
    userId?: SortOrderInput | SortOrder
    _count?: UserVerifyCountOrderByAggregateInput
    _max?: UserVerifyMaxOrderByAggregateInput
    _min?: UserVerifyMinOrderByAggregateInput
  }

  export type UserVerifyScalarWhereWithAggregatesInput = {
    AND?: UserVerifyScalarWhereWithAggregatesInput | UserVerifyScalarWhereWithAggregatesInput[]
    OR?: UserVerifyScalarWhereWithAggregatesInput[]
    NOT?: UserVerifyScalarWhereWithAggregatesInput | UserVerifyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserVerify"> | string
    status?: BoolWithAggregatesFilter<"UserVerify"> | boolean
    code?: StringWithAggregatesFilter<"UserVerify"> | string
    userId?: StringNullableWithAggregatesFilter<"UserVerify"> | string | null
  }

  export type UserCreditNotificationWhereInput = {
    AND?: UserCreditNotificationWhereInput | UserCreditNotificationWhereInput[]
    OR?: UserCreditNotificationWhereInput[]
    NOT?: UserCreditNotificationWhereInput | UserCreditNotificationWhereInput[]
    id?: StringFilter<"UserCreditNotification"> | string
    credit?: FloatFilter<"UserCreditNotification"> | number
    lastSent?: DateTimeFilter<"UserCreditNotification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserCreditNotificationOrderByWithRelationInput = {
    id?: SortOrder
    credit?: SortOrder
    lastSent?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserCreditNotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserCreditNotificationWhereInput | UserCreditNotificationWhereInput[]
    OR?: UserCreditNotificationWhereInput[]
    NOT?: UserCreditNotificationWhereInput | UserCreditNotificationWhereInput[]
    credit?: FloatFilter<"UserCreditNotification"> | number
    lastSent?: DateTimeFilter<"UserCreditNotification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type UserCreditNotificationOrderByWithAggregationInput = {
    id?: SortOrder
    credit?: SortOrder
    lastSent?: SortOrder
    _count?: UserCreditNotificationCountOrderByAggregateInput
    _avg?: UserCreditNotificationAvgOrderByAggregateInput
    _max?: UserCreditNotificationMaxOrderByAggregateInput
    _min?: UserCreditNotificationMinOrderByAggregateInput
    _sum?: UserCreditNotificationSumOrderByAggregateInput
  }

  export type UserCreditNotificationScalarWhereWithAggregatesInput = {
    AND?: UserCreditNotificationScalarWhereWithAggregatesInput | UserCreditNotificationScalarWhereWithAggregatesInput[]
    OR?: UserCreditNotificationScalarWhereWithAggregatesInput[]
    NOT?: UserCreditNotificationScalarWhereWithAggregatesInput | UserCreditNotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserCreditNotification"> | string
    credit?: FloatWithAggregatesFilter<"UserCreditNotification"> | number
    lastSent?: DateTimeWithAggregatesFilter<"UserCreditNotification"> | Date | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    categoriesName?: StringFilter<"Category"> | string
    createdOn?: DateTimeFilter<"Category"> | Date | string
    updatedOn?: DateTimeFilter<"Category"> | Date | string
    createdBy?: StringNullableFilter<"Category"> | string | null
    updatedBy?: StringNullableFilter<"Category"> | string | null
    services?: ServiceListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    categoriesName?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    services?: ServiceOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    categoriesName?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    createdOn?: DateTimeFilter<"Category"> | Date | string
    updatedOn?: DateTimeFilter<"Category"> | Date | string
    createdBy?: StringNullableFilter<"Category"> | string | null
    updatedBy?: StringNullableFilter<"Category"> | string | null
    services?: ServiceListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "categoriesName">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    categoriesName?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    categoriesName?: StringWithAggregatesFilter<"Category"> | string
    createdOn?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedOn?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Category"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Category"> | string | null
  }

  export type ServiceWhereInput = {
    AND?: ServiceWhereInput | ServiceWhereInput[]
    OR?: ServiceWhereInput[]
    NOT?: ServiceWhereInput | ServiceWhereInput[]
    id?: StringFilter<"Service"> | string
    name?: StringFilter<"Service"> | string
    apiCategoriesId?: StringFilter<"Service"> | string
    price?: FloatNullableFilter<"Service"> | number | null
    description?: StringNullableFilter<"Service"> | string | null
    description_EN?: StringNullableFilter<"Service"> | string | null
    order?: IntNullableFilter<"Service"> | number | null
    urlPath?: StringNullableFilter<"Service"> | string | null
    useCaseDetail1?: StringNullableFilter<"Service"> | string | null
    useCaseDetail1_EN?: StringNullableFilter<"Service"> | string | null
    useCaseDetail2?: StringNullableFilter<"Service"> | string | null
    useCaseDetail2_EN?: StringNullableFilter<"Service"> | string | null
    useCaseDetail3?: StringNullableFilter<"Service"> | string | null
    useCaseDetail3_EN?: StringNullableFilter<"Service"> | string | null
    useCaseImagePath?: StringNullableFilter<"Service"> | string | null
    imagePath?: StringNullableFilter<"Service"> | string | null
    createdOn?: DateTimeNullableFilter<"Service"> | Date | string | null
    updatedOn?: DateTimeNullableFilter<"Service"> | Date | string | null
    createdBy?: StringNullableFilter<"Service"> | string | null
    updatedBy?: StringNullableFilter<"Service"> | string | null
    docsUrl?: StringNullableFilter<"Service"> | string | null
    isFeaturedProducts?: BoolNullableFilter<"Service"> | boolean | null
    icon?: StringNullableFilter<"Service"> | string | null
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ServiceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    apiCategoriesId?: SortOrder
    price?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    description_EN?: SortOrderInput | SortOrder
    order?: SortOrderInput | SortOrder
    urlPath?: SortOrderInput | SortOrder
    useCaseDetail1?: SortOrderInput | SortOrder
    useCaseDetail1_EN?: SortOrderInput | SortOrder
    useCaseDetail2?: SortOrderInput | SortOrder
    useCaseDetail2_EN?: SortOrderInput | SortOrder
    useCaseDetail3?: SortOrderInput | SortOrder
    useCaseDetail3_EN?: SortOrderInput | SortOrder
    useCaseImagePath?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    createdOn?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    docsUrl?: SortOrderInput | SortOrder
    isFeaturedProducts?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    category?: CategoryOrderByWithRelationInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type ServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    apiCategoriesId?: string
    AND?: ServiceWhereInput | ServiceWhereInput[]
    OR?: ServiceWhereInput[]
    NOT?: ServiceWhereInput | ServiceWhereInput[]
    name?: StringFilter<"Service"> | string
    price?: FloatNullableFilter<"Service"> | number | null
    description?: StringNullableFilter<"Service"> | string | null
    description_EN?: StringNullableFilter<"Service"> | string | null
    order?: IntNullableFilter<"Service"> | number | null
    urlPath?: StringNullableFilter<"Service"> | string | null
    useCaseDetail1?: StringNullableFilter<"Service"> | string | null
    useCaseDetail1_EN?: StringNullableFilter<"Service"> | string | null
    useCaseDetail2?: StringNullableFilter<"Service"> | string | null
    useCaseDetail2_EN?: StringNullableFilter<"Service"> | string | null
    useCaseDetail3?: StringNullableFilter<"Service"> | string | null
    useCaseDetail3_EN?: StringNullableFilter<"Service"> | string | null
    useCaseImagePath?: StringNullableFilter<"Service"> | string | null
    imagePath?: StringNullableFilter<"Service"> | string | null
    createdOn?: DateTimeNullableFilter<"Service"> | Date | string | null
    updatedOn?: DateTimeNullableFilter<"Service"> | Date | string | null
    createdBy?: StringNullableFilter<"Service"> | string | null
    updatedBy?: StringNullableFilter<"Service"> | string | null
    docsUrl?: StringNullableFilter<"Service"> | string | null
    isFeaturedProducts?: BoolNullableFilter<"Service"> | boolean | null
    icon?: StringNullableFilter<"Service"> | string | null
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "apiCategoriesId">

  export type ServiceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    apiCategoriesId?: SortOrder
    price?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    description_EN?: SortOrderInput | SortOrder
    order?: SortOrderInput | SortOrder
    urlPath?: SortOrderInput | SortOrder
    useCaseDetail1?: SortOrderInput | SortOrder
    useCaseDetail1_EN?: SortOrderInput | SortOrder
    useCaseDetail2?: SortOrderInput | SortOrder
    useCaseDetail2_EN?: SortOrderInput | SortOrder
    useCaseDetail3?: SortOrderInput | SortOrder
    useCaseDetail3_EN?: SortOrderInput | SortOrder
    useCaseImagePath?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    createdOn?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    docsUrl?: SortOrderInput | SortOrder
    isFeaturedProducts?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    _count?: ServiceCountOrderByAggregateInput
    _avg?: ServiceAvgOrderByAggregateInput
    _max?: ServiceMaxOrderByAggregateInput
    _min?: ServiceMinOrderByAggregateInput
    _sum?: ServiceSumOrderByAggregateInput
  }

  export type ServiceScalarWhereWithAggregatesInput = {
    AND?: ServiceScalarWhereWithAggregatesInput | ServiceScalarWhereWithAggregatesInput[]
    OR?: ServiceScalarWhereWithAggregatesInput[]
    NOT?: ServiceScalarWhereWithAggregatesInput | ServiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Service"> | string
    name?: StringWithAggregatesFilter<"Service"> | string
    apiCategoriesId?: StringWithAggregatesFilter<"Service"> | string
    price?: FloatNullableWithAggregatesFilter<"Service"> | number | null
    description?: StringNullableWithAggregatesFilter<"Service"> | string | null
    description_EN?: StringNullableWithAggregatesFilter<"Service"> | string | null
    order?: IntNullableWithAggregatesFilter<"Service"> | number | null
    urlPath?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseDetail1?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseDetail1_EN?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseDetail2?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseDetail2_EN?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseDetail3?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseDetail3_EN?: StringNullableWithAggregatesFilter<"Service"> | string | null
    useCaseImagePath?: StringNullableWithAggregatesFilter<"Service"> | string | null
    imagePath?: StringNullableWithAggregatesFilter<"Service"> | string | null
    createdOn?: DateTimeNullableWithAggregatesFilter<"Service"> | Date | string | null
    updatedOn?: DateTimeNullableWithAggregatesFilter<"Service"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"Service"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Service"> | string | null
    docsUrl?: StringNullableWithAggregatesFilter<"Service"> | string | null
    isFeaturedProducts?: BoolNullableWithAggregatesFilter<"Service"> | boolean | null
    icon?: StringNullableWithAggregatesFilter<"Service"> | string | null
  }

  export type PricingWhereInput = {
    AND?: PricingWhereInput | PricingWhereInput[]
    OR?: PricingWhereInput[]
    NOT?: PricingWhereInput | PricingWhereInput[]
    id?: StringFilter<"Pricing"> | string
    icPerPrice?: FloatFilter<"Pricing"> | number
    validatePeriod?: IntFilter<"Pricing"> | number
    min?: FloatFilter<"Pricing"> | number
    max?: FloatFilter<"Pricing"> | number
    createdOn?: DateTimeFilter<"Pricing"> | Date | string
    updatedOn?: DateTimeFilter<"Pricing"> | Date | string
    createdBy?: StringNullableFilter<"Pricing"> | string | null
    updatedBy?: StringNullableFilter<"Pricing"> | string | null
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type PricingOrderByWithRelationInput = {
    id?: SortOrder
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type PricingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PricingWhereInput | PricingWhereInput[]
    OR?: PricingWhereInput[]
    NOT?: PricingWhereInput | PricingWhereInput[]
    icPerPrice?: FloatFilter<"Pricing"> | number
    validatePeriod?: IntFilter<"Pricing"> | number
    min?: FloatFilter<"Pricing"> | number
    max?: FloatFilter<"Pricing"> | number
    createdOn?: DateTimeFilter<"Pricing"> | Date | string
    updatedOn?: DateTimeFilter<"Pricing"> | Date | string
    createdBy?: StringNullableFilter<"Pricing"> | string | null
    updatedBy?: StringNullableFilter<"Pricing"> | string | null
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type PricingOrderByWithAggregationInput = {
    id?: SortOrder
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: PricingCountOrderByAggregateInput
    _avg?: PricingAvgOrderByAggregateInput
    _max?: PricingMaxOrderByAggregateInput
    _min?: PricingMinOrderByAggregateInput
    _sum?: PricingSumOrderByAggregateInput
  }

  export type PricingScalarWhereWithAggregatesInput = {
    AND?: PricingScalarWhereWithAggregatesInput | PricingScalarWhereWithAggregatesInput[]
    OR?: PricingScalarWhereWithAggregatesInput[]
    NOT?: PricingScalarWhereWithAggregatesInput | PricingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Pricing"> | string
    icPerPrice?: FloatWithAggregatesFilter<"Pricing"> | number
    validatePeriod?: IntWithAggregatesFilter<"Pricing"> | number
    min?: FloatWithAggregatesFilter<"Pricing"> | number
    max?: FloatWithAggregatesFilter<"Pricing"> | number
    createdOn?: DateTimeWithAggregatesFilter<"Pricing"> | Date | string
    updatedOn?: DateTimeWithAggregatesFilter<"Pricing"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Pricing"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Pricing"> | string | null
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserVerifyCreateInput = {
    id?: string
    status?: boolean
    code: string
    user?: UserCreateNestedOneWithoutVerifyInput
  }

  export type UserVerifyUncheckedCreateInput = {
    id?: string
    status?: boolean
    code: string
    userId?: string | null
  }

  export type UserVerifyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    code?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneWithoutVerifyNestedInput
  }

  export type UserVerifyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserVerifyCreateManyInput = {
    id?: string
    status?: boolean
    code: string
    userId?: string | null
  }

  export type UserVerifyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    code?: StringFieldUpdateOperationsInput | string
  }

  export type UserVerifyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    code?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreditNotificationCreateInput = {
    credit: number
    lastSent: Date | string
    user?: UserCreateNestedOneWithoutCreditNotificationInput
  }

  export type UserCreditNotificationUncheckedCreateInput = {
    id?: string
    credit: number
    lastSent: Date | string
  }

  export type UserCreditNotificationUpdateInput = {
    credit?: FloatFieldUpdateOperationsInput | number
    lastSent?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCreditNotificationNestedInput
  }

  export type UserCreditNotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    credit?: FloatFieldUpdateOperationsInput | number
    lastSent?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreditNotificationCreateManyInput = {
    id?: string
    credit: number
    lastSent: Date | string
  }

  export type UserCreditNotificationUpdateManyMutationInput = {
    credit?: FloatFieldUpdateOperationsInput | number
    lastSent?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreditNotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    credit?: FloatFieldUpdateOperationsInput | number
    lastSent?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    services?: ServiceCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedCategoriesInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    services?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    services?: ServiceUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    services?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceCreateInput = {
    id?: string
    name: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
    category?: CategoryCreateNestedOneWithoutServicesInput
    createdByUser?: UserCreateNestedOneWithoutCreatedServicesInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedServicesInput
  }

  export type ServiceUncheckedCreateInput = {
    id?: string
    name: string
    apiCategoriesId: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    category?: CategoryUpdateOneWithoutServicesNestedInput
    createdByUser?: UserUpdateOneWithoutCreatedServicesNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedServicesNestedInput
  }

  export type ServiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    apiCategoriesId?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceCreateManyInput = {
    id?: string
    name: string
    apiCategoriesId: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    apiCategoriesId?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PricingCreateInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    createdByUser?: UserCreateNestedOneWithoutCreatedPricingsInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedPricingsInput
  }

  export type PricingUncheckedCreateInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type PricingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUser?: UserUpdateOneWithoutCreatedPricingsNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedPricingsNestedInput
  }

  export type PricingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PricingCreateManyInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type PricingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PricingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type UserVerifyNullableScalarRelationFilter = {
    is?: UserVerifyWhereInput | null
    isNot?: UserVerifyWhereInput | null
  }

  export type UserCreditNotificationNullableScalarRelationFilter = {
    is?: UserCreditNotificationWhereInput | null
    isNot?: UserCreditNotificationWhereInput | null
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type ServiceListRelationFilter = {
    every?: ServiceWhereInput
    some?: ServiceWhereInput
    none?: ServiceWhereInput
  }

  export type PricingListRelationFilter = {
    every?: PricingWhereInput
    some?: PricingWhereInput
    none?: PricingWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PricingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    name?: SortOrder
    picture?: SortOrder
    role?: SortOrder
    verifyId?: SortOrder
    notification?: SortOrder
    allNotification?: SortOrder
    method?: SortOrder
    status?: SortOrder
    google?: SortOrder
    facebook?: SortOrder
    provider?: SortOrder
    creditBalance?: SortOrder
    creditPeriod?: SortOrder
    consumersId?: SortOrder
    salt?: SortOrder
    token?: SortOrder
    rtoken?: SortOrder
    ftoken?: SortOrder
    gtoken?: SortOrder
    pwExpiredOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    taxName?: SortOrder
    taxNo?: SortOrder
    taxAddress?: SortOrder
    profileImage?: SortOrder
    faceCompanyName?: SortOrder
    faceCompanyPassword?: SortOrder
    profile?: SortOrder
    signtoken?: SortOrder
    credit?: SortOrder
    subscription?: SortOrder
    type?: SortOrder
    originCreditBalance?: SortOrder
    createdAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    creditBalance?: SortOrder
    originCreditBalance?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    name?: SortOrder
    picture?: SortOrder
    role?: SortOrder
    verifyId?: SortOrder
    notification?: SortOrder
    allNotification?: SortOrder
    method?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    creditBalance?: SortOrder
    creditPeriod?: SortOrder
    consumersId?: SortOrder
    salt?: SortOrder
    token?: SortOrder
    rtoken?: SortOrder
    ftoken?: SortOrder
    gtoken?: SortOrder
    pwExpiredOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    taxName?: SortOrder
    taxNo?: SortOrder
    taxAddress?: SortOrder
    profileImage?: SortOrder
    faceCompanyName?: SortOrder
    faceCompanyPassword?: SortOrder
    subscription?: SortOrder
    type?: SortOrder
    originCreditBalance?: SortOrder
    createdAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    name?: SortOrder
    picture?: SortOrder
    role?: SortOrder
    verifyId?: SortOrder
    notification?: SortOrder
    allNotification?: SortOrder
    method?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    creditBalance?: SortOrder
    creditPeriod?: SortOrder
    consumersId?: SortOrder
    salt?: SortOrder
    token?: SortOrder
    rtoken?: SortOrder
    ftoken?: SortOrder
    gtoken?: SortOrder
    pwExpiredOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    taxName?: SortOrder
    taxNo?: SortOrder
    taxAddress?: SortOrder
    profileImage?: SortOrder
    faceCompanyName?: SortOrder
    faceCompanyPassword?: SortOrder
    subscription?: SortOrder
    type?: SortOrder
    originCreditBalance?: SortOrder
    createdAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    creditBalance?: SortOrder
    originCreditBalance?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserVerifyCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    code?: SortOrder
    userId?: SortOrder
  }

  export type UserVerifyMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    code?: SortOrder
    userId?: SortOrder
  }

  export type UserVerifyMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    code?: SortOrder
    userId?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserCreditNotificationCountOrderByAggregateInput = {
    id?: SortOrder
    credit?: SortOrder
    lastSent?: SortOrder
  }

  export type UserCreditNotificationAvgOrderByAggregateInput = {
    credit?: SortOrder
  }

  export type UserCreditNotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    credit?: SortOrder
    lastSent?: SortOrder
  }

  export type UserCreditNotificationMinOrderByAggregateInput = {
    id?: SortOrder
    credit?: SortOrder
    lastSent?: SortOrder
  }

  export type UserCreditNotificationSumOrderByAggregateInput = {
    credit?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    categoriesName?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    categoriesName?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    categoriesName?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type ServiceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    apiCategoriesId?: SortOrder
    price?: SortOrder
    description?: SortOrder
    description_EN?: SortOrder
    order?: SortOrder
    urlPath?: SortOrder
    useCaseDetail1?: SortOrder
    useCaseDetail1_EN?: SortOrder
    useCaseDetail2?: SortOrder
    useCaseDetail2_EN?: SortOrder
    useCaseDetail3?: SortOrder
    useCaseDetail3_EN?: SortOrder
    useCaseImagePath?: SortOrder
    imagePath?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    docsUrl?: SortOrder
    isFeaturedProducts?: SortOrder
    icon?: SortOrder
  }

  export type ServiceAvgOrderByAggregateInput = {
    price?: SortOrder
    order?: SortOrder
  }

  export type ServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    apiCategoriesId?: SortOrder
    price?: SortOrder
    description?: SortOrder
    description_EN?: SortOrder
    order?: SortOrder
    urlPath?: SortOrder
    useCaseDetail1?: SortOrder
    useCaseDetail1_EN?: SortOrder
    useCaseDetail2?: SortOrder
    useCaseDetail2_EN?: SortOrder
    useCaseDetail3?: SortOrder
    useCaseDetail3_EN?: SortOrder
    useCaseImagePath?: SortOrder
    imagePath?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    docsUrl?: SortOrder
    isFeaturedProducts?: SortOrder
    icon?: SortOrder
  }

  export type ServiceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    apiCategoriesId?: SortOrder
    price?: SortOrder
    description?: SortOrder
    description_EN?: SortOrder
    order?: SortOrder
    urlPath?: SortOrder
    useCaseDetail1?: SortOrder
    useCaseDetail1_EN?: SortOrder
    useCaseDetail2?: SortOrder
    useCaseDetail2_EN?: SortOrder
    useCaseDetail3?: SortOrder
    useCaseDetail3_EN?: SortOrder
    useCaseImagePath?: SortOrder
    imagePath?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    docsUrl?: SortOrder
    isFeaturedProducts?: SortOrder
    icon?: SortOrder
  }

  export type ServiceSumOrderByAggregateInput = {
    price?: SortOrder
    order?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type PricingCountOrderByAggregateInput = {
    id?: SortOrder
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type PricingAvgOrderByAggregateInput = {
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
  }

  export type PricingMaxOrderByAggregateInput = {
    id?: SortOrder
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type PricingMinOrderByAggregateInput = {
    id?: SortOrder
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
    createdOn?: SortOrder
    updatedOn?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type PricingSumOrderByAggregateInput = {
    icPerPrice?: SortOrder
    validatePeriod?: SortOrder
    min?: SortOrder
    max?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type UserVerifyCreateNestedOneWithoutUserInput = {
    create?: XOR<UserVerifyCreateWithoutUserInput, UserVerifyUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserVerifyCreateOrConnectWithoutUserInput
    connect?: UserVerifyWhereUniqueInput
  }

  export type UserCreditNotificationCreateNestedOneWithoutUserInput = {
    create?: XOR<UserCreditNotificationCreateWithoutUserInput, UserCreditNotificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserCreditNotificationCreateOrConnectWithoutUserInput
    connect?: UserCreditNotificationWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ServiceCreateWithoutCreatedByUserInput, ServiceUncheckedCreateWithoutCreatedByUserInput> | ServiceCreateWithoutCreatedByUserInput[] | ServiceUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCreatedByUserInput | ServiceCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ServiceCreateManyCreatedByUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ServiceCreateWithoutUpdatedByUserInput, ServiceUncheckedCreateWithoutUpdatedByUserInput> | ServiceCreateWithoutUpdatedByUserInput[] | ServiceUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUpdatedByUserInput | ServiceCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ServiceCreateManyUpdatedByUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type PricingCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<PricingCreateWithoutCreatedByUserInput, PricingUncheckedCreateWithoutCreatedByUserInput> | PricingCreateWithoutCreatedByUserInput[] | PricingUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutCreatedByUserInput | PricingCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: PricingCreateManyCreatedByUserInputEnvelope
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
  }

  export type PricingCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<PricingCreateWithoutUpdatedByUserInput, PricingUncheckedCreateWithoutUpdatedByUserInput> | PricingCreateWithoutUpdatedByUserInput[] | PricingUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutUpdatedByUserInput | PricingCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: PricingCreateManyUpdatedByUserInputEnvelope
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
  }

  export type UserVerifyUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserVerifyCreateWithoutUserInput, UserVerifyUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserVerifyCreateOrConnectWithoutUserInput
    connect?: UserVerifyWhereUniqueInput
  }

  export type UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserCreditNotificationCreateWithoutUserInput, UserCreditNotificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserCreditNotificationCreateOrConnectWithoutUserInput
    connect?: UserCreditNotificationWhereUniqueInput
  }

  export type CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ServiceCreateWithoutCreatedByUserInput, ServiceUncheckedCreateWithoutCreatedByUserInput> | ServiceCreateWithoutCreatedByUserInput[] | ServiceUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCreatedByUserInput | ServiceCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ServiceCreateManyCreatedByUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ServiceCreateWithoutUpdatedByUserInput, ServiceUncheckedCreateWithoutUpdatedByUserInput> | ServiceCreateWithoutUpdatedByUserInput[] | ServiceUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUpdatedByUserInput | ServiceCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ServiceCreateManyUpdatedByUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type PricingUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<PricingCreateWithoutCreatedByUserInput, PricingUncheckedCreateWithoutCreatedByUserInput> | PricingCreateWithoutCreatedByUserInput[] | PricingUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutCreatedByUserInput | PricingCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: PricingCreateManyCreatedByUserInputEnvelope
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
  }

  export type PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<PricingCreateWithoutUpdatedByUserInput, PricingUncheckedCreateWithoutUpdatedByUserInput> | PricingCreateWithoutUpdatedByUserInput[] | PricingUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutUpdatedByUserInput | PricingCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: PricingCreateManyUpdatedByUserInputEnvelope
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserVerifyUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserVerifyCreateWithoutUserInput, UserVerifyUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserVerifyCreateOrConnectWithoutUserInput
    upsert?: UserVerifyUpsertWithoutUserInput
    disconnect?: UserVerifyWhereInput | boolean
    delete?: UserVerifyWhereInput | boolean
    connect?: UserVerifyWhereUniqueInput
    update?: XOR<XOR<UserVerifyUpdateToOneWithWhereWithoutUserInput, UserVerifyUpdateWithoutUserInput>, UserVerifyUncheckedUpdateWithoutUserInput>
  }

  export type UserCreditNotificationUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserCreditNotificationCreateWithoutUserInput, UserCreditNotificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserCreditNotificationCreateOrConnectWithoutUserInput
    upsert?: UserCreditNotificationUpsertWithoutUserInput
    disconnect?: UserCreditNotificationWhereInput | boolean
    delete?: UserCreditNotificationWhereInput | boolean
    connect?: UserCreditNotificationWhereUniqueInput
    update?: XOR<XOR<UserCreditNotificationUpdateToOneWithWhereWithoutUserInput, UserCreditNotificationUpdateWithoutUserInput>, UserCreditNotificationUncheckedUpdateWithoutUserInput>
  }

  export type CategoryUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput | CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput | CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCreatedByUserInput | CategoryUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUpdatedByUserInput | CategoryUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ServiceCreateWithoutCreatedByUserInput, ServiceUncheckedCreateWithoutCreatedByUserInput> | ServiceCreateWithoutCreatedByUserInput[] | ServiceUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCreatedByUserInput | ServiceCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutCreatedByUserInput | ServiceUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ServiceCreateManyCreatedByUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutCreatedByUserInput | ServiceUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutCreatedByUserInput | ServiceUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUpdatedByUserInput, ServiceUncheckedCreateWithoutUpdatedByUserInput> | ServiceCreateWithoutUpdatedByUserInput[] | ServiceUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUpdatedByUserInput | ServiceCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUpdatedByUserInput | ServiceUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ServiceCreateManyUpdatedByUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUpdatedByUserInput | ServiceUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUpdatedByUserInput | ServiceUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type PricingUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<PricingCreateWithoutCreatedByUserInput, PricingUncheckedCreateWithoutCreatedByUserInput> | PricingCreateWithoutCreatedByUserInput[] | PricingUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutCreatedByUserInput | PricingCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: PricingUpsertWithWhereUniqueWithoutCreatedByUserInput | PricingUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: PricingCreateManyCreatedByUserInputEnvelope
    set?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    disconnect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    delete?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    update?: PricingUpdateWithWhereUniqueWithoutCreatedByUserInput | PricingUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: PricingUpdateManyWithWhereWithoutCreatedByUserInput | PricingUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: PricingScalarWhereInput | PricingScalarWhereInput[]
  }

  export type PricingUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<PricingCreateWithoutUpdatedByUserInput, PricingUncheckedCreateWithoutUpdatedByUserInput> | PricingCreateWithoutUpdatedByUserInput[] | PricingUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutUpdatedByUserInput | PricingCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: PricingUpsertWithWhereUniqueWithoutUpdatedByUserInput | PricingUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: PricingCreateManyUpdatedByUserInputEnvelope
    set?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    disconnect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    delete?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    update?: PricingUpdateWithWhereUniqueWithoutUpdatedByUserInput | PricingUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: PricingUpdateManyWithWhereWithoutUpdatedByUserInput | PricingUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: PricingScalarWhereInput | PricingScalarWhereInput[]
  }

  export type UserVerifyUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserVerifyCreateWithoutUserInput, UserVerifyUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserVerifyCreateOrConnectWithoutUserInput
    upsert?: UserVerifyUpsertWithoutUserInput
    disconnect?: UserVerifyWhereInput | boolean
    delete?: UserVerifyWhereInput | boolean
    connect?: UserVerifyWhereUniqueInput
    update?: XOR<XOR<UserVerifyUpdateToOneWithWhereWithoutUserInput, UserVerifyUpdateWithoutUserInput>, UserVerifyUncheckedUpdateWithoutUserInput>
  }

  export type UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserCreditNotificationCreateWithoutUserInput, UserCreditNotificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserCreditNotificationCreateOrConnectWithoutUserInput
    upsert?: UserCreditNotificationUpsertWithoutUserInput
    disconnect?: UserCreditNotificationWhereInput | boolean
    delete?: UserCreditNotificationWhereInput | boolean
    connect?: UserCreditNotificationWhereUniqueInput
    update?: XOR<XOR<UserCreditNotificationUpdateToOneWithWhereWithoutUserInput, UserCreditNotificationUpdateWithoutUserInput>, UserCreditNotificationUncheckedUpdateWithoutUserInput>
  }

  export type CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput | CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput | CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCreatedByUserInput | CategoryUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUpdatedByUserInput | CategoryUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ServiceCreateWithoutCreatedByUserInput, ServiceUncheckedCreateWithoutCreatedByUserInput> | ServiceCreateWithoutCreatedByUserInput[] | ServiceUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCreatedByUserInput | ServiceCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutCreatedByUserInput | ServiceUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ServiceCreateManyCreatedByUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutCreatedByUserInput | ServiceUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutCreatedByUserInput | ServiceUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUpdatedByUserInput, ServiceUncheckedCreateWithoutUpdatedByUserInput> | ServiceCreateWithoutUpdatedByUserInput[] | ServiceUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUpdatedByUserInput | ServiceCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUpdatedByUserInput | ServiceUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ServiceCreateManyUpdatedByUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUpdatedByUserInput | ServiceUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUpdatedByUserInput | ServiceUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<PricingCreateWithoutCreatedByUserInput, PricingUncheckedCreateWithoutCreatedByUserInput> | PricingCreateWithoutCreatedByUserInput[] | PricingUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutCreatedByUserInput | PricingCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: PricingUpsertWithWhereUniqueWithoutCreatedByUserInput | PricingUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: PricingCreateManyCreatedByUserInputEnvelope
    set?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    disconnect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    delete?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    update?: PricingUpdateWithWhereUniqueWithoutCreatedByUserInput | PricingUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: PricingUpdateManyWithWhereWithoutCreatedByUserInput | PricingUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: PricingScalarWhereInput | PricingScalarWhereInput[]
  }

  export type PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<PricingCreateWithoutUpdatedByUserInput, PricingUncheckedCreateWithoutUpdatedByUserInput> | PricingCreateWithoutUpdatedByUserInput[] | PricingUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: PricingCreateOrConnectWithoutUpdatedByUserInput | PricingCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: PricingUpsertWithWhereUniqueWithoutUpdatedByUserInput | PricingUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: PricingCreateManyUpdatedByUserInputEnvelope
    set?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    disconnect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    delete?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    connect?: PricingWhereUniqueInput | PricingWhereUniqueInput[]
    update?: PricingUpdateWithWhereUniqueWithoutUpdatedByUserInput | PricingUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: PricingUpdateManyWithWhereWithoutUpdatedByUserInput | PricingUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: PricingScalarWhereInput | PricingScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutVerifyInput = {
    create?: XOR<UserCreateWithoutVerifyInput, UserUncheckedCreateWithoutVerifyInput>
    connectOrCreate?: UserCreateOrConnectWithoutVerifyInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutVerifyNestedInput = {
    create?: XOR<UserCreateWithoutVerifyInput, UserUncheckedCreateWithoutVerifyInput>
    connectOrCreate?: UserCreateOrConnectWithoutVerifyInput
    upsert?: UserUpsertWithoutVerifyInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutVerifyInput, UserUpdateWithoutVerifyInput>, UserUncheckedUpdateWithoutVerifyInput>
  }

  export type UserCreateNestedOneWithoutCreditNotificationInput = {
    create?: XOR<UserCreateWithoutCreditNotificationInput, UserUncheckedCreateWithoutCreditNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreditNotificationInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCreditNotificationNestedInput = {
    create?: XOR<UserCreateWithoutCreditNotificationInput, UserUncheckedCreateWithoutCreditNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreditNotificationInput
    upsert?: UserUpsertWithoutCreditNotificationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreditNotificationInput, UserUpdateWithoutCreditNotificationInput>, UserUncheckedUpdateWithoutCreditNotificationInput>
  }

  export type ServiceCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedCategoriesInput = {
    create?: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedCategoriesInput = {
    create?: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type ServiceUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutCategoryInput | ServiceUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutCategoryInput | ServiceUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutCategoryInput | ServiceUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCategoriesInput
    upsert?: UserUpsertWithoutCreatedCategoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedCategoriesInput, UserUpdateWithoutCreatedCategoriesInput>, UserUncheckedUpdateWithoutCreatedCategoriesInput>
  }

  export type UserUpdateOneWithoutUpdatedCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedCategoriesInput
    upsert?: UserUpsertWithoutUpdatedCategoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedCategoriesInput, UserUpdateWithoutUpdatedCategoriesInput>, UserUncheckedUpdateWithoutUpdatedCategoriesInput>
  }

  export type ServiceUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutCategoryInput | ServiceUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutCategoryInput | ServiceUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutCategoryInput | ServiceUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutServicesInput = {
    create?: XOR<CategoryCreateWithoutServicesInput, CategoryUncheckedCreateWithoutServicesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutServicesInput
    connect?: CategoryWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedServicesInput = {
    create?: XOR<UserCreateWithoutCreatedServicesInput, UserUncheckedCreateWithoutCreatedServicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedServicesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedServicesInput = {
    create?: XOR<UserCreateWithoutUpdatedServicesInput, UserUncheckedCreateWithoutUpdatedServicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedServicesInput
    connect?: UserWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type CategoryUpdateOneWithoutServicesNestedInput = {
    create?: XOR<CategoryCreateWithoutServicesInput, CategoryUncheckedCreateWithoutServicesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutServicesInput
    upsert?: CategoryUpsertWithoutServicesInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutServicesInput, CategoryUpdateWithoutServicesInput>, CategoryUncheckedUpdateWithoutServicesInput>
  }

  export type UserUpdateOneWithoutCreatedServicesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedServicesInput, UserUncheckedCreateWithoutCreatedServicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedServicesInput
    upsert?: UserUpsertWithoutCreatedServicesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedServicesInput, UserUpdateWithoutCreatedServicesInput>, UserUncheckedUpdateWithoutCreatedServicesInput>
  }

  export type UserUpdateOneWithoutUpdatedServicesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedServicesInput, UserUncheckedCreateWithoutUpdatedServicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedServicesInput
    upsert?: UserUpsertWithoutUpdatedServicesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedServicesInput, UserUpdateWithoutUpdatedServicesInput>, UserUncheckedUpdateWithoutUpdatedServicesInput>
  }

  export type UserCreateNestedOneWithoutCreatedPricingsInput = {
    create?: XOR<UserCreateWithoutCreatedPricingsInput, UserUncheckedCreateWithoutCreatedPricingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedPricingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedPricingsInput = {
    create?: XOR<UserCreateWithoutUpdatedPricingsInput, UserUncheckedCreateWithoutUpdatedPricingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedPricingsInput
    connect?: UserWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneWithoutCreatedPricingsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedPricingsInput, UserUncheckedCreateWithoutCreatedPricingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedPricingsInput
    upsert?: UserUpsertWithoutCreatedPricingsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedPricingsInput, UserUpdateWithoutCreatedPricingsInput>, UserUncheckedUpdateWithoutCreatedPricingsInput>
  }

  export type UserUpdateOneWithoutUpdatedPricingsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedPricingsInput, UserUncheckedCreateWithoutUpdatedPricingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedPricingsInput
    upsert?: UserUpsertWithoutUpdatedPricingsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedPricingsInput, UserUpdateWithoutUpdatedPricingsInput>, UserUncheckedUpdateWithoutUpdatedPricingsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type UserVerifyCreateWithoutUserInput = {
    id?: string
    status?: boolean
    code: string
  }

  export type UserVerifyUncheckedCreateWithoutUserInput = {
    id?: string
    status?: boolean
    code: string
  }

  export type UserVerifyCreateOrConnectWithoutUserInput = {
    where: UserVerifyWhereUniqueInput
    create: XOR<UserVerifyCreateWithoutUserInput, UserVerifyUncheckedCreateWithoutUserInput>
  }

  export type UserCreditNotificationCreateWithoutUserInput = {
    credit: number
    lastSent: Date | string
  }

  export type UserCreditNotificationUncheckedCreateWithoutUserInput = {
    credit: number
    lastSent: Date | string
  }

  export type UserCreditNotificationCreateOrConnectWithoutUserInput = {
    where: UserCreditNotificationWhereUniqueInput
    create: XOR<UserCreditNotificationCreateWithoutUserInput, UserCreditNotificationUncheckedCreateWithoutUserInput>
  }

  export type CategoryCreateWithoutCreatedByUserInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    services?: ServiceCreateNestedManyWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    updatedBy?: string | null
    services?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCreatedByUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput>
  }

  export type CategoryCreateManyCreatedByUserInputEnvelope = {
    data: CategoryCreateManyCreatedByUserInput | CategoryCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutUpdatedByUserInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    services?: ServiceCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCreatedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
    services?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutUpdatedByUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type CategoryCreateManyUpdatedByUserInputEnvelope = {
    data: CategoryCreateManyUpdatedByUserInput | CategoryCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
    category?: CategoryCreateNestedOneWithoutServicesInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedServicesInput
  }

  export type ServiceUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    apiCategoriesId: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    updatedBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceCreateOrConnectWithoutCreatedByUserInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutCreatedByUserInput, ServiceUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ServiceCreateManyCreatedByUserInputEnvelope = {
    data: ServiceCreateManyCreatedByUserInput | ServiceCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
    category?: CategoryCreateNestedOneWithoutServicesInput
    createdByUser?: UserCreateNestedOneWithoutCreatedServicesInput
  }

  export type ServiceUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    apiCategoriesId: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    createdBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceCreateOrConnectWithoutUpdatedByUserInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutUpdatedByUserInput, ServiceUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ServiceCreateManyUpdatedByUserInputEnvelope = {
    data: ServiceCreateManyUpdatedByUserInput | ServiceCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type PricingCreateWithoutCreatedByUserInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    updatedByUser?: UserCreateNestedOneWithoutUpdatedPricingsInput
  }

  export type PricingUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    updatedBy?: string | null
  }

  export type PricingCreateOrConnectWithoutCreatedByUserInput = {
    where: PricingWhereUniqueInput
    create: XOR<PricingCreateWithoutCreatedByUserInput, PricingUncheckedCreateWithoutCreatedByUserInput>
  }

  export type PricingCreateManyCreatedByUserInputEnvelope = {
    data: PricingCreateManyCreatedByUserInput | PricingCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type PricingCreateWithoutUpdatedByUserInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    createdByUser?: UserCreateNestedOneWithoutCreatedPricingsInput
  }

  export type PricingUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
  }

  export type PricingCreateOrConnectWithoutUpdatedByUserInput = {
    where: PricingWhereUniqueInput
    create: XOR<PricingCreateWithoutUpdatedByUserInput, PricingUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type PricingCreateManyUpdatedByUserInputEnvelope = {
    data: PricingCreateManyUpdatedByUserInput | PricingCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type UserVerifyUpsertWithoutUserInput = {
    update: XOR<UserVerifyUpdateWithoutUserInput, UserVerifyUncheckedUpdateWithoutUserInput>
    create: XOR<UserVerifyCreateWithoutUserInput, UserVerifyUncheckedCreateWithoutUserInput>
    where?: UserVerifyWhereInput
  }

  export type UserVerifyUpdateToOneWithWhereWithoutUserInput = {
    where?: UserVerifyWhereInput
    data: XOR<UserVerifyUpdateWithoutUserInput, UserVerifyUncheckedUpdateWithoutUserInput>
  }

  export type UserVerifyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    code?: StringFieldUpdateOperationsInput | string
  }

  export type UserVerifyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    code?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreditNotificationUpsertWithoutUserInput = {
    update: XOR<UserCreditNotificationUpdateWithoutUserInput, UserCreditNotificationUncheckedUpdateWithoutUserInput>
    create: XOR<UserCreditNotificationCreateWithoutUserInput, UserCreditNotificationUncheckedCreateWithoutUserInput>
    where?: UserCreditNotificationWhereInput
  }

  export type UserCreditNotificationUpdateToOneWithWhereWithoutUserInput = {
    where?: UserCreditNotificationWhereInput
    data: XOR<UserCreditNotificationUpdateWithoutUserInput, UserCreditNotificationUncheckedUpdateWithoutUserInput>
  }

  export type UserCreditNotificationUpdateWithoutUserInput = {
    credit?: FloatFieldUpdateOperationsInput | number
    lastSent?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreditNotificationUncheckedUpdateWithoutUserInput = {
    credit?: FloatFieldUpdateOperationsInput | number
    lastSent?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutCreatedByUserInput, CategoryUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutCreatedByUserInput, CategoryUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: StringFilter<"Category"> | string
    categoriesName?: StringFilter<"Category"> | string
    createdOn?: DateTimeFilter<"Category"> | Date | string
    updatedOn?: DateTimeFilter<"Category"> | Date | string
    createdBy?: StringNullableFilter<"Category"> | string | null
    updatedBy?: StringNullableFilter<"Category"> | string | null
  }

  export type CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutUpdatedByUserInput, CategoryUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutUpdatedByUserInput, CategoryUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type ServiceUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutCreatedByUserInput, ServiceUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<ServiceCreateWithoutCreatedByUserInput, ServiceUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutCreatedByUserInput, ServiceUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type ServiceUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type ServiceScalarWhereInput = {
    AND?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
    OR?: ServiceScalarWhereInput[]
    NOT?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
    id?: StringFilter<"Service"> | string
    name?: StringFilter<"Service"> | string
    apiCategoriesId?: StringFilter<"Service"> | string
    price?: FloatNullableFilter<"Service"> | number | null
    description?: StringNullableFilter<"Service"> | string | null
    description_EN?: StringNullableFilter<"Service"> | string | null
    order?: IntNullableFilter<"Service"> | number | null
    urlPath?: StringNullableFilter<"Service"> | string | null
    useCaseDetail1?: StringNullableFilter<"Service"> | string | null
    useCaseDetail1_EN?: StringNullableFilter<"Service"> | string | null
    useCaseDetail2?: StringNullableFilter<"Service"> | string | null
    useCaseDetail2_EN?: StringNullableFilter<"Service"> | string | null
    useCaseDetail3?: StringNullableFilter<"Service"> | string | null
    useCaseDetail3_EN?: StringNullableFilter<"Service"> | string | null
    useCaseImagePath?: StringNullableFilter<"Service"> | string | null
    imagePath?: StringNullableFilter<"Service"> | string | null
    createdOn?: DateTimeNullableFilter<"Service"> | Date | string | null
    updatedOn?: DateTimeNullableFilter<"Service"> | Date | string | null
    createdBy?: StringNullableFilter<"Service"> | string | null
    updatedBy?: StringNullableFilter<"Service"> | string | null
    docsUrl?: StringNullableFilter<"Service"> | string | null
    isFeaturedProducts?: BoolNullableFilter<"Service"> | boolean | null
    icon?: StringNullableFilter<"Service"> | string | null
  }

  export type ServiceUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutUpdatedByUserInput, ServiceUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<ServiceCreateWithoutUpdatedByUserInput, ServiceUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutUpdatedByUserInput, ServiceUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type ServiceUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type PricingUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: PricingWhereUniqueInput
    update: XOR<PricingUpdateWithoutCreatedByUserInput, PricingUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<PricingCreateWithoutCreatedByUserInput, PricingUncheckedCreateWithoutCreatedByUserInput>
  }

  export type PricingUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: PricingWhereUniqueInput
    data: XOR<PricingUpdateWithoutCreatedByUserInput, PricingUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type PricingUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: PricingScalarWhereInput
    data: XOR<PricingUpdateManyMutationInput, PricingUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type PricingScalarWhereInput = {
    AND?: PricingScalarWhereInput | PricingScalarWhereInput[]
    OR?: PricingScalarWhereInput[]
    NOT?: PricingScalarWhereInput | PricingScalarWhereInput[]
    id?: StringFilter<"Pricing"> | string
    icPerPrice?: FloatFilter<"Pricing"> | number
    validatePeriod?: IntFilter<"Pricing"> | number
    min?: FloatFilter<"Pricing"> | number
    max?: FloatFilter<"Pricing"> | number
    createdOn?: DateTimeFilter<"Pricing"> | Date | string
    updatedOn?: DateTimeFilter<"Pricing"> | Date | string
    createdBy?: StringNullableFilter<"Pricing"> | string | null
    updatedBy?: StringNullableFilter<"Pricing"> | string | null
  }

  export type PricingUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: PricingWhereUniqueInput
    update: XOR<PricingUpdateWithoutUpdatedByUserInput, PricingUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<PricingCreateWithoutUpdatedByUserInput, PricingUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type PricingUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: PricingWhereUniqueInput
    data: XOR<PricingUpdateWithoutUpdatedByUserInput, PricingUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type PricingUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: PricingScalarWhereInput
    data: XOR<PricingUpdateManyMutationInput, PricingUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type UserCreateWithoutVerifyInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutVerifyInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutVerifyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutVerifyInput, UserUncheckedCreateWithoutVerifyInput>
  }

  export type UserUpsertWithoutVerifyInput = {
    update: XOR<UserUpdateWithoutVerifyInput, UserUncheckedUpdateWithoutVerifyInput>
    create: XOR<UserCreateWithoutVerifyInput, UserUncheckedCreateWithoutVerifyInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutVerifyInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutVerifyInput, UserUncheckedUpdateWithoutVerifyInput>
  }

  export type UserUpdateWithoutVerifyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutVerifyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserCreateWithoutCreditNotificationInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutCreditNotificationInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutCreditNotificationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreditNotificationInput, UserUncheckedCreateWithoutCreditNotificationInput>
  }

  export type UserUpsertWithoutCreditNotificationInput = {
    update: XOR<UserUpdateWithoutCreditNotificationInput, UserUncheckedUpdateWithoutCreditNotificationInput>
    create: XOR<UserCreateWithoutCreditNotificationInput, UserUncheckedCreateWithoutCreditNotificationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreditNotificationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreditNotificationInput, UserUncheckedUpdateWithoutCreditNotificationInput>
  }

  export type UserUpdateWithoutCreditNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreditNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type ServiceCreateWithoutCategoryInput = {
    id?: string
    name: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
    createdByUser?: UserCreateNestedOneWithoutCreatedServicesInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedServicesInput
  }

  export type ServiceUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceCreateOrConnectWithoutCategoryInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput>
  }

  export type ServiceCreateManyCategoryInputEnvelope = {
    data: ServiceCreateManyCategoryInput | ServiceCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedCategoriesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutCreatedCategoriesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutCreatedCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
  }

  export type UserCreateWithoutUpdatedCategoriesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutUpdatedCategoriesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutUpdatedCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
  }

  export type ServiceUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutCategoryInput, ServiceUncheckedUpdateWithoutCategoryInput>
    create: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutCategoryInput, ServiceUncheckedUpdateWithoutCategoryInput>
  }

  export type ServiceUpdateManyWithWhereWithoutCategoryInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutCategoryInput>
  }

  export type UserUpsertWithoutCreatedCategoriesInput = {
    update: XOR<UserUpdateWithoutCreatedCategoriesInput, UserUncheckedUpdateWithoutCreatedCategoriesInput>
    create: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedCategoriesInput, UserUncheckedUpdateWithoutCreatedCategoriesInput>
  }

  export type UserUpdateWithoutCreatedCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUpsertWithoutUpdatedCategoriesInput = {
    update: XOR<UserUpdateWithoutUpdatedCategoriesInput, UserUncheckedUpdateWithoutUpdatedCategoriesInput>
    create: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedCategoriesInput, UserUncheckedUpdateWithoutUpdatedCategoriesInput>
  }

  export type UserUpdateWithoutUpdatedCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type CategoryCreateWithoutServicesInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    createdByUser?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutServicesInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type CategoryCreateOrConnectWithoutServicesInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutServicesInput, CategoryUncheckedCreateWithoutServicesInput>
  }

  export type UserCreateWithoutCreatedServicesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutCreatedServicesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutCreatedServicesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedServicesInput, UserUncheckedCreateWithoutCreatedServicesInput>
  }

  export type UserCreateWithoutUpdatedServicesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutUpdatedServicesInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutUpdatedServicesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedServicesInput, UserUncheckedCreateWithoutUpdatedServicesInput>
  }

  export type CategoryUpsertWithoutServicesInput = {
    update: XOR<CategoryUpdateWithoutServicesInput, CategoryUncheckedUpdateWithoutServicesInput>
    create: XOR<CategoryCreateWithoutServicesInput, CategoryUncheckedCreateWithoutServicesInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutServicesInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutServicesInput, CategoryUncheckedUpdateWithoutServicesInput>
  }

  export type CategoryUpdateWithoutServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUser?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpsertWithoutCreatedServicesInput = {
    update: XOR<UserUpdateWithoutCreatedServicesInput, UserUncheckedUpdateWithoutCreatedServicesInput>
    create: XOR<UserCreateWithoutCreatedServicesInput, UserUncheckedCreateWithoutCreatedServicesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedServicesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedServicesInput, UserUncheckedUpdateWithoutCreatedServicesInput>
  }

  export type UserUpdateWithoutCreatedServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUpsertWithoutUpdatedServicesInput = {
    update: XOR<UserUpdateWithoutUpdatedServicesInput, UserUncheckedUpdateWithoutUpdatedServicesInput>
    create: XOR<UserCreateWithoutUpdatedServicesInput, UserUncheckedCreateWithoutUpdatedServicesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedServicesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedServicesInput, UserUncheckedUpdateWithoutUpdatedServicesInput>
  }

  export type UserUpdateWithoutUpdatedServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserCreateWithoutCreatedPricingsInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    updatedPricings?: PricingCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserUncheckedCreateWithoutCreatedPricingsInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    updatedPricings?: PricingUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UserCreateOrConnectWithoutCreatedPricingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedPricingsInput, UserUncheckedCreateWithoutCreatedPricingsInput>
  }

  export type UserCreateWithoutUpdatedPricingsInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationCreateNestedOneWithoutUserInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingCreateNestedManyWithoutCreatedByUserInput
  }

  export type UserUncheckedCreateWithoutUpdatedPricingsInput = {
    id?: string
    email: string
    password: string
    phone?: string | null
    name: string
    picture?: string | null
    role?: string
    verifyId?: string | null
    notification?: boolean
    allNotification?: boolean
    method?: string | null
    status: string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider: string
    creditBalance?: number
    creditPeriod?: Date | string | null
    consumersId?: string | null
    salt?: string | null
    token?: string | null
    rtoken?: string | null
    ftoken?: string | null
    gtoken?: string | null
    pwExpiredOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    createdOn?: Date | string
    updatedOn?: Date | string
    taxName?: string | null
    taxNo?: string | null
    taxAddress?: string | null
    profileImage?: string | null
    faceCompanyName?: string | null
    faceCompanyPassword?: string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: boolean
    type?: string | null
    originCreditBalance?: number | null
    createdAt?: Date | string
    verify?: UserVerifyUncheckedCreateNestedOneWithoutUserInput
    creditNotification?: UserCreditNotificationUncheckedCreateNestedOneWithoutUserInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdServices?: ServiceUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedServices?: ServiceUncheckedCreateNestedManyWithoutUpdatedByUserInput
    createdPricings?: PricingUncheckedCreateNestedManyWithoutCreatedByUserInput
  }

  export type UserCreateOrConnectWithoutUpdatedPricingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedPricingsInput, UserUncheckedCreateWithoutUpdatedPricingsInput>
  }

  export type UserUpsertWithoutCreatedPricingsInput = {
    update: XOR<UserUpdateWithoutCreatedPricingsInput, UserUncheckedUpdateWithoutCreatedPricingsInput>
    create: XOR<UserCreateWithoutCreatedPricingsInput, UserUncheckedCreateWithoutCreatedPricingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedPricingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedPricingsInput, UserUncheckedUpdateWithoutCreatedPricingsInput>
  }

  export type UserUpdateWithoutCreatedPricingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    updatedPricings?: PricingUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedPricingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    updatedPricings?: PricingUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UserUpsertWithoutUpdatedPricingsInput = {
    update: XOR<UserUpdateWithoutUpdatedPricingsInput, UserUncheckedUpdateWithoutUpdatedPricingsInput>
    create: XOR<UserCreateWithoutUpdatedPricingsInput, UserUncheckedCreateWithoutUpdatedPricingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedPricingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedPricingsInput, UserUncheckedUpdateWithoutUpdatedPricingsInput>
  }

  export type UserUpdateWithoutUpdatedPricingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUpdateManyWithoutCreatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedPricingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    verifyId?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: BoolFieldUpdateOperationsInput | boolean
    allNotification?: BoolFieldUpdateOperationsInput | boolean
    method?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    google?: NullableJsonNullValueInput | InputJsonValue
    facebook?: NullableJsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    creditBalance?: FloatFieldUpdateOperationsInput | number
    creditPeriod?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consumersId?: NullableStringFieldUpdateOperationsInput | string | null
    salt?: NullableStringFieldUpdateOperationsInput | string | null
    token?: NullableStringFieldUpdateOperationsInput | string | null
    rtoken?: NullableStringFieldUpdateOperationsInput | string | null
    ftoken?: NullableStringFieldUpdateOperationsInput | string | null
    gtoken?: NullableStringFieldUpdateOperationsInput | string | null
    pwExpiredOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    taxName?: NullableStringFieldUpdateOperationsInput | string | null
    taxNo?: NullableStringFieldUpdateOperationsInput | string | null
    taxAddress?: NullableStringFieldUpdateOperationsInput | string | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    faceCompanyPassword?: NullableStringFieldUpdateOperationsInput | string | null
    profile?: NullableJsonNullValueInput | InputJsonValue
    signtoken?: NullableJsonNullValueInput | InputJsonValue
    credit?: NullableJsonNullValueInput | InputJsonValue
    subscription?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    originCreditBalance?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verify?: UserVerifyUncheckedUpdateOneWithoutUserNestedInput
    creditNotification?: UserCreditNotificationUncheckedUpdateOneWithoutUserNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdServices?: ServiceUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedServices?: ServiceUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    createdPricings?: PricingUncheckedUpdateManyWithoutCreatedByUserNestedInput
  }

  export type CategoryCreateManyCreatedByUserInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    updatedBy?: string | null
  }

  export type CategoryCreateManyUpdatedByUserInput = {
    id?: string
    categoriesName: string
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
  }

  export type ServiceCreateManyCreatedByUserInput = {
    id?: string
    name: string
    apiCategoriesId: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    updatedBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceCreateManyUpdatedByUserInput = {
    id?: string
    name: string
    apiCategoriesId: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    createdBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type PricingCreateManyCreatedByUserInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    updatedBy?: string | null
  }

  export type PricingCreateManyUpdatedByUserInput = {
    id?: string
    icPerPrice: number
    validatePeriod: number
    min: number
    max: number
    createdOn?: Date | string
    updatedOn?: Date | string
    createdBy?: string | null
  }

  export type CategoryUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    services?: ServiceUpdateManyWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    services?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    services?: ServiceUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCreatedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    services?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoriesName?: StringFieldUpdateOperationsInput | string
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    category?: CategoryUpdateOneWithoutServicesNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedServicesNestedInput
  }

  export type ServiceUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    apiCategoriesId?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    apiCategoriesId?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    category?: CategoryUpdateOneWithoutServicesNestedInput
    createdByUser?: UserUpdateOneWithoutCreatedServicesNestedInput
  }

  export type ServiceUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    apiCategoriesId?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    apiCategoriesId?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PricingUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByUser?: UserUpdateOneWithoutUpdatedPricingsNestedInput
  }

  export type PricingUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PricingUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PricingUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUser?: UserUpdateOneWithoutCreatedPricingsNestedInput
  }

  export type PricingUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PricingUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    icPerPrice?: FloatFieldUpdateOperationsInput | number
    validatePeriod?: IntFieldUpdateOperationsInput | number
    min?: FloatFieldUpdateOperationsInput | number
    max?: FloatFieldUpdateOperationsInput | number
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceCreateManyCategoryInput = {
    id?: string
    name: string
    price?: number | null
    description?: string | null
    description_EN?: string | null
    order?: number | null
    urlPath?: string | null
    useCaseDetail1?: string | null
    useCaseDetail1_EN?: string | null
    useCaseDetail2?: string | null
    useCaseDetail2_EN?: string | null
    useCaseDetail3?: string | null
    useCaseDetail3_EN?: string | null
    useCaseImagePath?: string | null
    imagePath?: string | null
    createdOn?: Date | string | null
    updatedOn?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    docsUrl?: string | null
    isFeaturedProducts?: boolean | null
    icon?: string | null
  }

  export type ServiceUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUser?: UserUpdateOneWithoutCreatedServicesNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedServicesNestedInput
  }

  export type ServiceUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ServiceUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    description_EN?: NullableStringFieldUpdateOperationsInput | string | null
    order?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail1_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail2_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseDetail3_EN?: NullableStringFieldUpdateOperationsInput | string | null
    useCaseImagePath?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    docsUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isFeaturedProducts?: NullableBoolFieldUpdateOperationsInput | boolean | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}